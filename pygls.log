INFO:pygls.server:Starting TCP server on 127.0.0.1:2087
DEBUG:pygls.protocol:Received b'Content-Length: 4562\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":8756,"clientInfo":{"name":"Visual Studio Code","version":"1.66.2"},"locale":"en-gb","rootPath":null,"rootUri":null,"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"changeAnnotationSupport":{"groupsOnLabel":true}},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"codeLens":{"refreshSupport":true},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"dynamicRegistration":true,"didCreate":true,"didRename":true,"didDelete":true,"willCreate":true,"willRename":true,"willDelete":true}},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]},"insertReplaceSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true},"activeParameterSupport":true},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true,"tagSupport":{"valueSet":[1]},"labelSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"disabledSupport":true,"dataSupport":true,"resolveSupport":{"properties":["edit"]},"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"honorsChangeAnnotations":false},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1,"honorsChangeAnnotations":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"formats":["relative"],"requests":{"range":true,"full":{"delta":true}},"multilineTokenSupport":false,"overlappingTokenSupport":false},"linkedEditingRange":{"dynamicRegistration":true}},"window":{"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"showDocument":{"support":true},"workDoneProgress":true},"general":{"regularExpressions":{"engine":"ECMAScript","version":"ES2020"},"markdown":{"parser":"marked","version":"1.1.0"}}},"trace":"off","workspaceFolders":null}}'
DEBUG:pygls.protocol:Request message received.
INFO:pygls.protocol:Language server initialized work_done_token=None process_id=8756 root_uri=None capabilities=ClientCapabilities(workspace=WorkspaceClientCapabilities(apply_edit=True, workspace_edit=WorkspaceEditClientCapabilities(document_changes=True, resource_operations=[<ResourceOperationKind.Create: 'create'>, <ResourceOperationKind.Rename: 'rename'>, <ResourceOperationKind.Delete: 'delete'>], failure_handling=<FailureHandlingKind.TextOnlyTransactional: 'textOnlyTransactional'>, normalizes_line_endings=True, change_annotation_support=ChangeAnnotationSupport(groups_on_label=True)), did_change_configuration=DidChangeConfigurationClientCapabilities(dynamic_registration=True), did_change_watched_files=DidChangeWatchedFilesClientCapabilities(dynamic_registration=True), symbol=WorkspaceSymbolClientCapabilities(dynamic_registration=True, symbol_kind=WorkspaceCapabilitiesSymbolKind(value_set=[<SymbolKind.File: 1>, <SymbolKind.Module: 2>, <SymbolKind.Namespace: 3>, <SymbolKind.Package: 4>, <SymbolKind.Class: 5>, <SymbolKind.Method: 6>, <SymbolKind.Property: 7>, <SymbolKind.Field: 8>, <SymbolKind.Constructor: 9>, <SymbolKind.Enum: 10>, <SymbolKind.Interface: 11>, <SymbolKind.Function: 12>, <SymbolKind.Variable: 13>, <SymbolKind.Constant: 14>, <SymbolKind.String: 15>, <SymbolKind.Number: 16>, <SymbolKind.Boolean: 17>, <SymbolKind.Array: 18>, <SymbolKind.Object: 19>, <SymbolKind.Key: 20>, <SymbolKind.Null: 21>, <SymbolKind.EnumMember: 22>, <SymbolKind.Struct: 23>, <SymbolKind.Event: 24>, <SymbolKind.Operator: 25>, <SymbolKind.TypeParameter: 26>]), tag_support=WorkspaceCapabilitiesTagSupport(value_set=[<SymbolKind.File: 1>])), execute_command=ExecuteCommandClientCapabilities(dynamic_registration=True), workspace_folders=True, configuration=True, semantic_tokens=SemanticTokensWorkspaceClientCapabilities(refresh_support=True), code_lens=CodeLensWorkspaceClientCapabilities(refresh_support=True), file_operations=FileOperationsClientCapabilities(dynamic_registration=True, did_create=True, will_create=True, did_rename=True, will_rename=True, did_delete=True, will_delete=True)), text_document=TextDocumentClientCapabilities(synchronization=TextDocumentSyncClientCapabilities(dynamic_registration=True, will_save=True, will_save_wait_until=True, did_save=True), completion=CompletionClientCapabilities(dynamic_registration=True, completion_item=CompletionItemClientCapabilities(snippet_support=True, commit_characters_support=True, documentation_format=[<MarkupKind.Markdown: 'markdown'>, <MarkupKind.PlainText: 'plaintext'>], deprecated_support=True, preselect_support=True, tag_support=CompletionTagSupportClientCapabilities(value_set=[<CompletionItemTag.Deprecated: 1>]), insert_replace_support=True, resolve_support=ResolveSupportClientCapabilities(properties=['documentation', 'detail', 'additionalTextEdits']), insert_text_mode_support=InsertTextModeSupportClientCapabilities(value_set=[<InsertTextMode.AsIs: 1>, <InsertTextMode.AdjustIndentation: 2>])), completion_item_kind=CompletionItemKindClientCapabilities(value_set=[<CompletionItemKind.Text: 1>, <CompletionItemKind.Method: 2>, <CompletionItemKind.Function: 3>, <CompletionItemKind.Constructor: 4>, <CompletionItemKind.Field: 5>, <CompletionItemKind.Variable: 6>, <CompletionItemKind.Class: 7>, <CompletionItemKind.Interface: 8>, <CompletionItemKind.Module: 9>, <CompletionItemKind.Property: 10>, <CompletionItemKind.Unit: 11>, <CompletionItemKind.Value: 12>, <CompletionItemKind.Enum: 13>, <CompletionItemKind.Keyword: 14>, <CompletionItemKind.Snippet: 15>, <CompletionItemKind.Color: 16>, <CompletionItemKind.File: 17>, <CompletionItemKind.Reference: 18>, <CompletionItemKind.Folder: 19>, <CompletionItemKind.EnumMember: 20>, <CompletionItemKind.Constant: 21>, <CompletionItemKind.Struct: 22>, <CompletionItemKind.Event: 23>, <CompletionItemKind.Operator: 24>, <CompletionItemKind.TypeParameter: 25>]), context_support=True), hover=HoverClientCapabilities(dynamic_registration=True, content_format=[<MarkupKind.Markdown: 'markdown'>, <MarkupKind.PlainText: 'plaintext'>]), signature_help=SignatureHelpClientCapabilities(dynamic_registration=True, signature_information=SignatureHelpInformationClientCapabilities(documentation_format=[<MarkupKind.Markdown: 'markdown'>, <MarkupKind.PlainText: 'plaintext'>], parameter_information=SignatureHelpInformationParameterInformationClientCapabilities(label_offset_support=True), active_parameter_support=True), context_support=True), declaration=DeclarationClientCapabilities(dynamic_registration=True, link_support=True), definition=DefinitionClientCapabilities(dynamic_registration=True, link_support=True), type_definition=TypeDefinitionClientCapabilities(dynamic_registration=True, link_support=True), implementation=ImplementationClientCapabilities(dynamic_registration=True, link_support=True), references=ReferenceClientCapabilities(dynamic_registration=True), document_highlight=DocumentHighlightClientCapabilities(dynamic_registration=True), document_symbol=DocumentSymbolClientCapabilities(dynamic_registration=True, symbol_kind=WorkspaceCapabilitiesSymbolKind(value_set=[<SymbolKind.File: 1>, <SymbolKind.Module: 2>, <SymbolKind.Namespace: 3>, <SymbolKind.Package: 4>, <SymbolKind.Class: 5>, <SymbolKind.Method: 6>, <SymbolKind.Property: 7>, <SymbolKind.Field: 8>, <SymbolKind.Constructor: 9>, <SymbolKind.Enum: 10>, <SymbolKind.Interface: 11>, <SymbolKind.Function: 12>, <SymbolKind.Variable: 13>, <SymbolKind.Constant: 14>, <SymbolKind.String: 15>, <SymbolKind.Number: 16>, <SymbolKind.Boolean: 17>, <SymbolKind.Array: 18>, <SymbolKind.Object: 19>, <SymbolKind.Key: 20>, <SymbolKind.Null: 21>, <SymbolKind.EnumMember: 22>, <SymbolKind.Struct: 23>, <SymbolKind.Event: 24>, <SymbolKind.Operator: 25>, <SymbolKind.TypeParameter: 26>]), hierarchical_document_symbol_support=True, tag_support=WorkspaceCapabilitiesTagSupport(value_set=[<SymbolKind.File: 1>]), label_support=True), code_action=CodeActionClientCapabilities(dynamic_registration=True, code_action_literal_support=CodeActionLiteralSupportClientCapabilities(code_action_kind=CodeActionLiteralSupportActionKindClientCapabilities(value_set=['', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 'refactor.rewrite', 'source', 'source.organizeImports'])), is_preferred_support=True, disabled_support=True, data_support=True, resolve_support=ResolveSupportClientCapabilities(properties=['edit']), honors_change_annotations=False), code_lens=CodeLensClientCapabilities(dynamic_registration=True), document_link=DocumentLinkClientCapabilities(dynamic_registration=True, tooltip_support=True), color_provider=DocumentColorClientCapabilities(dynamic_registration=True), formatting=DocumentFormattingClientCapabilities(dynamic_registration=True), range_formatting=DocumentRangeFormattingClientCapabilities(dynamic_registration=True), on_type_formatting=DocumentOnTypeFormattingClientCapabilities(dynamic_registration=True), rename=RenameClientCapabilities(dynamic_registration=True, prepare_support=True, prepare_support_default_behavior=<PrepareSupportDefaultBehavior.Identifier: 1>, honors_change_annotations=True), publish_diagnostics=PublishDiagnosticsClientCapabilities(related_information=True, tag_support=PublishDiagnosticsTagSupportClientCapabilities(value_set=[<DiagnosticTag.Unnecessary: 1>, <DiagnosticTag.Deprecated: 2>]), version_support=False, code_description_support=True, data_support=True), folding_range=FoldingRangeClientCapabilities(dynamic_registration=True, range_limit=5000, line_folding_only=True), selection_range=SelectionRangeClientCapabilities(dynamic_registration=True), linked_editing_range=LinkedEditingRangeClientCapabilities(dynamic_registration=True), call_hierarchy=CallHierarchyClientCapabilities(dynamic_registration=True), semantic_tokens=SemanticTokensClientCapabilities(requests=SemanticTokensRequests(range=True, full=SemanticTokensRequestsFull(delta=True)), token_types=['namespace', 'type', 'class', 'enum', 'interface', 'struct', 'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 'number', 'regexp', 'operator'], token_modifiers=['declaration', 'definition', 'readonly', 'static', 'deprecated', 'abstract', 'async', 'modification', 'documentation', 'defaultLibrary'], formats=[<TokenFormat.Relative: 'relative'>], overlapping_token_support=False, multiline_token_support=False, dynamic_registration=True), moniker=None), window=WindowClientCapabilities(work_done_progress=True, show_message=ShowMessageRequestClientCapabilities(message_action_item=ShowMessageRequestActionItem(additional_properties_support=True)), show_document=ShowDocumentClientCapabilities(support=True)), general=GeneralClientCapabilities(regular_expressions=RegularExpressionsClientCapabilities(engine='ECMAScript', version='ES2020'), markdown=MarkdownClientCapabilities(parser='marked', version='1.1.0')), experimental=None) client_info=ClientInfo(name='Visual Studio Code', version='1.66.2') locale='en-gb' root_path=None initialization_options=None trace=<Trace.Off: 'off'> workspace_folders=None
DEBUG:pygls.protocol:Server capabilities: {'text_document_sync': {'open_close': True, 'change': <TextDocumentSyncKind.INCREMENTAL: 2>, 'will_save': False, 'will_save_wait_until': False, 'save': False}, 'completion_provider': None, 'hover_provider': None, 'signature_help_provider': None, 'declaration_provider': None, 'definition_provider': None, 'type_definition_provider': None, 'implementation_provider': None, 'references_provider': None, 'document_highlight_provider': None, 'document_symbol_provider': None, 'code_action_provider': None, 'code_lens_provider': None, 'document_link_provider': None, 'color_provider': None, 'document_formatting_provider': None, 'document_range_formatting_provider': None, 'document_on_type_formatting_provider': None, 'rename_provider': None, 'folding_range_provider': None, 'execute_command_provider': {'work_done_progress': None, 'commands': ['ACS-python.getSearchResults', 'ACS-python.fetchSummary']}, 'selection_range_provider': None, 'linked_editing_range_provider': None, 'call_hierarchy_provider': None, 'semantic_tokens_provider': None, 'moniker_provider': None, 'workspace_symbol_provider': None, 'workspace': {'workspace_folders': {'supported': True, 'change_notifications': True}, 'file_operations': {'did_create': None, 'will_create': None, 'did_rename': None, 'will_rename': None, 'did_delete': None, 'will_delete': None}}, 'experimental': None}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 0, "result": {"capabilities": {"textDocumentSync": {"openClose": true, "change": 2, "willSave": false, "willSaveWaitUntil": false, "save": false}, "executeCommandProvider": {"commands": ["ACS-python.getSearchResults", "ACS-python.fetchSummary"]}, "workspace": {"workspaceFolders": {"supported": true, "changeNotifications": true}, "fileOperations": {}}}}}
DEBUG:pygls.protocol:Received b'Content-Length: 52\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"initialized","params":{}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 524\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/poorna/test.py","languageId":"python","version":11,"text":"\\n\\"\\"\\"$\\nAdd two numbers .\\n$\\"\\"\\"\\ndef addNum(a, b):\\n    return a + b\\n\\n\\"\\"\\"$\\nReturns True if t exists False otherwise .\\n$\\"\\"\\"\\ndef exists(arr, t):\\n    if( t in arr ):\\n        return True\\n    return False\\n\\n\\"\\"\\"$\\n$\\"\\"\\"\\ndef sumOfArray(arr):\\n    \\n\\n\\"\\"\\"$\\nFunction Description Goes here\\n$\\"\\"\\"\\ndef getsum(arr):\\n    print()\\n    return arr"}}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 76266\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/poorna/.vscode/extensions/ms-python.vscode-pylance-2022.4.3/dist/typeshed-fallback/stdlib/builtins.pyi","languageId":"python","version":1,"text":"import sys\\nimport types\\nfrom _ast import AST\\nfrom _collections_abc import dict_items, dict_keys, dict_values\\nfrom _typeshed import (\\n    OpenBinaryMode,\\n    OpenBinaryModeReading,\\n    OpenBinaryModeUpdating,\\n    OpenBinaryModeWriting,\\n    OpenTextMode,\\n    ReadableBuffer,\\n    Self,\\n    StrOrBytesPath,\\n    SupportsAnext,\\n    SupportsDivMod,\\n    SupportsKeysAndGetItem,\\n    SupportsLenAndGetItem,\\n    SupportsNext,\\n    SupportsRDivMod,\\n    SupportsRichComparison,\\n    SupportsRichComparisonT,\\n    SupportsTrunc,\\n    SupportsWrite,\\n)\\nfrom collections.abc import Callable\\nfrom io import BufferedRandom, BufferedReader, BufferedWriter, FileIO, TextIOWrapper\\nfrom types import CodeType, TracebackType, _Cell\\nfrom typing import (\\n    IO,\\n    AbstractSet,\\n    Any,\\n    Awaitable,\\n    BinaryIO,\\n    ByteString,\\n    ClassVar,\\n    Generic,\\n    Iterable,\\n    Iterator,\\n    Mapping,\\n    MutableMapping,\\n    MutableSequence,\\n    MutableSet,\\n    NoReturn,\\n    Protocol,\\n    Reversible,\\n    Sequence,\\n    Sized,\\n    SupportsAbs,\\n    SupportsBytes,\\n    SupportsComplex,\\n    SupportsFloat,\\n    SupportsInt,\\n    SupportsRound,\\n    TypeVar,\\n    overload,\\n)\\nfrom typing_extensions import Literal, SupportsIndex, TypeAlias, TypeGuard, final\\n\\nif sys.version_info >= (3, 9):\\n    from types import GenericAlias\\n\\n_T = TypeVar(\\"_T\\")\\n_T_co = TypeVar(\\"_T_co\\", covariant=True)\\n_T_contra = TypeVar(\\"_T_contra\\", contravariant=True)\\n_R_co = TypeVar(\\"_R_co\\", covariant=True)\\n_KT = TypeVar(\\"_KT\\")\\n_VT = TypeVar(\\"_VT\\")\\n_S = TypeVar(\\"_S\\")\\n_T1 = TypeVar(\\"_T1\\")\\n_T2 = TypeVar(\\"_T2\\")\\n_T3 = TypeVar(\\"_T3\\")\\n_T4 = TypeVar(\\"_T4\\")\\n_T5 = TypeVar(\\"_T5\\")\\n_SupportsNextT = TypeVar(\\"_SupportsNextT\\", bound=SupportsNext[Any], covariant=True)\\n_SupportsAnextT = TypeVar(\\"_SupportsAnextT\\", bound=SupportsAnext[Any], covariant=True)\\n_AwaitableT = TypeVar(\\"_AwaitableT\\", bound=Awaitable[Any])\\n_AwaitableT_co = TypeVar(\\"_AwaitableT_co\\", bound=Awaitable[Any], covariant=True)\\n\\nclass _SupportsIter(Protocol[_T_co]):\\n    def __iter__(self) -> _T_co: ...\\n\\nclass _SupportsAiter(Protocol[_T_co]):\\n    def __aiter__(self) -> _T_co: ...\\n\\nclass object:\\n    __doc__: str | None\\n    __dict__: dict[str, Any]\\n    __module__: str\\n    __annotations__: dict[str, Any]\\n    @property\\n    def __class__(self: Self) -> type[Self]: ...\\n    # Ignore errors about type mismatch between property getter and setter\\n    @__class__.setter\\n    def __class__(self, __type: type[object]) -> None: ...  # type: ignore # noqa: F811\\n    def __init__(self) -> None: ...\\n    def __new__(cls: type[Self]) -> Self: ...\\n    # N.B. `object.__setattr__` and `object.__delattr__` are heavily special-cased by type checkers.\\n    # Overriding them in subclasses has different semantics, even if the override has an identical signature.\\n    def __setattr__(self, __name: str, __value: Any) -> None: ...\\n    def __delattr__(self, __name: str) -> None: ...\\n    def __eq__(self, __o: object) -> bool: ...\\n    def __ne__(self, __o: object) -> bool: ...\\n    def __str__(self) -> str: ...  # noqa: Y029\\n    def __repr__(self) -> str: ...  # noqa: Y029\\n    def __hash__(self) -> int: ...\\n    def __format__(self, __format_spec: str) -> str: ...\\n    def __getattribute__(self, __name: str) -> Any: ...\\n    def __sizeof__(self) -> int: ...\\n    # return type of pickle methods is rather hard to express in the current type system\\n    # see #6661 and https://docs.python.org/3/library/pickle.html#object.__reduce__\\n    def __reduce__(self) -> str | tuple[Any, ...]: ...\\n    if sys.version_info >= (3, 8):\\n        def __reduce_ex__(self, __protocol: SupportsIndex) -> str | tuple[Any, ...]: ...\\n    else:\\n        def __reduce_ex__(self, __protocol: int) -> str | tuple[Any, ...]: ...\\n\\n    def __dir__(self) -> Iterable[str]: ...\\n    def __init_subclass__(cls) -> None: ...\\n\\nclass staticmethod(Generic[_R_co]):\\n    @property\\n    def __func__(self) -> Callable[..., _R_co]: ...\\n    @property\\n    def __isabstractmethod__(self) -> bool: ...\\n    def __init__(self: staticmethod[_R_co], __f: Callable[..., _R_co]) -> None: ...\\n    def __get__(self, __obj: _T, __type: type[_T] | None = ...) -> Callable[..., _R_co]: ...\\n    if sys.version_info >= (3, 10):\\n        __name__: str\\n        __qualname__: str\\n        __wrapped__: Callable[..., _R_co]\\n        def __call__(self, *args: Any, **kwargs: Any) -> _R_co: ...\\n\\nclass classmethod(Generic[_R_co]):\\n    @property\\n    def __func__(self) -> Callable[..., _R_co]: ...\\n    @property\\n    def __isabstractmethod__(self) -> bool: ...\\n    def __init__(self: classmethod[_R_co], __f: Callable[..., _R_co]) -> None: ...\\n    def __get__(self, __obj: _T, __type: type[_T] | None = ...) -> Callable[..., _R_co]: ...\\n    if sys.version_info >= (3, 10):\\n        __name__: str\\n        __qualname__: str\\n        __wrapped__: Callable[..., _R_co]\\n\\nclass type:\\n    @property\\n    def __base__(self) -> type: ...\\n    __bases__: tuple[type, ...]\\n    @property\\n    def __basicsize__(self) -> int: ...\\n    @property\\n    def __dict__(self) -> types.MappingProxyType[str, Any]: ...  # type: ignore[override]\\n    @property\\n    def __dictoffset__(self) -> int: ...\\n    @property\\n    def __flags__(self) -> int: ...\\n    @property\\n    def __itemsize__(self) -> int: ...\\n    __module__: str\\n    @property\\n    def __mro__(self) -> tuple[type, ...]: ...\\n    __name__: str\\n    __qualname__: str\\n    @property\\n    def __text_signature__(self) -> str | None: ...\\n    @property\\n    def __weakrefoffset__(self) -> int: ...\\n    @overload\\n    def __init__(self, __o: object) -> None: ...\\n    @overload\\n    def __init__(self, __name: str, __bases: tuple[type, ...], __dict: dict[str, Any], **kwds: Any) -> None: ...\\n    @overload\\n    def __new__(cls, __o: object) -> type: ...\\n    @overload\\n    def __new__(cls: type[Self], __name: str, __bases: tuple[type, ...], __namespace: dict[str, Any], **kwds: Any) -> Self: ...\\n    def __call__(self, *args: Any, **kwds: Any) -> Any: ...\\n    def __subclasses__(self: Self) -> list[Self]: ...\\n    # Note: the documentation doesn\'t specify what the return type is, the standard\\n    # implementation seems to be returning a list.\\n    def mro(self) -> list[type]: ...\\n    def __instancecheck__(self, __instance: Any) -> bool: ...\\n    def __subclasscheck__(self, __subclass: type) -> bool: ...\\n    @classmethod\\n    def __prepare__(metacls, __name: str, __bases: tuple[type, ...], **kwds: Any) -> Mapping[str, object]: ...\\n    if sys.version_info >= (3, 10):\\n        def __or__(self, __t: Any) -> types.UnionType: ...\\n        def __ror__(self, __t: Any) -> types.UnionType: ...\\n\\nclass super:\\n    @overload\\n    def __init__(self, __t: Any, __obj: Any) -> None: ...\\n    @overload\\n    def __init__(self, __t: Any) -> None: ...\\n    @overload\\n    def __init__(self) -> None: ...\\n\\n_PositiveInteger: TypeAlias = Literal[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]\\n_NegativeInteger: TypeAlias = Literal[-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20]\\n\\nclass int:\\n    @overload\\n    def __new__(cls: type[Self], __x: str | ReadableBuffer | SupportsInt | SupportsIndex | SupportsTrunc = ...) -> Self: ...\\n    @overload\\n    def __new__(cls: type[Self], __x: str | bytes | bytearray, base: SupportsIndex) -> Self: ...\\n    if sys.version_info >= (3, 8):\\n        def as_integer_ratio(self) -> tuple[int, Literal[1]]: ...\\n\\n    @property\\n    def real(self) -> int: ...\\n    @property\\n    def imag(self) -> int: ...\\n    @property\\n    def numerator(self) -> int: ...\\n    @property\\n    def denominator(self) -> int: ...\\n    def conjugate(self) -> int: ...\\n    def bit_length(self) -> int: ...\\n    if sys.version_info >= (3, 10):\\n        def bit_count(self) -> int: ...\\n\\n    def to_bytes(self, length: SupportsIndex, byteorder: Literal[\\"little\\", \\"big\\"], *, signed: bool = ...) -> bytes: ...\\n    @classmethod\\n    def from_bytes(\\n        cls: type[Self],\\n        bytes: Iterable[SupportsIndex] | SupportsBytes | ReadableBuffer,\\n        byteorder: Literal[\\"little\\", \\"big\\"],\\n        *,\\n        signed: bool = ...,\\n    ) -> Self: ...\\n    def __add__(self, __x: int) -> int: ...\\n    def __sub__(self, __x: int) -> int: ...\\n    def __mul__(self, __x: int) -> int: ...\\n    def __floordiv__(self, __x: int) -> int: ...\\n    def __truediv__(self, __x: int) -> float: ...\\n    def __mod__(self, __x: int) -> int: ...\\n    def __divmod__(self, __x: int) -> tuple[int, int]: ...\\n    def __radd__(self, __x: int) -> int: ...\\n    def __rsub__(self, __x: int) -> int: ...\\n    def __rmul__(self, __x: int) -> int: ...\\n    def __rfloordiv__(self, __x: int) -> int: ...\\n    def __rtruediv__(self, __x: int) -> float: ...\\n    def __rmod__(self, __x: int) -> int: ...\\n    def __rdivmod__(self, __x: int) -> tuple[int, int]: ...\\n    @overload\\n    def __pow__(self, __x: int, __modulo: Literal[0]) -> NoReturn: ...\\n    @overload\\n    def __pow__(self, __x: int, __modulo: int) -> int: ...\\n    @overload\\n    def __pow__(self, __x: Literal[0], __modulo: None = ...) -> Literal[1]: ...\\n    @overload\\n    def __pow__(self, __x: _PositiveInteger, __modulo: None = ...) -> int: ...\\n    @overload\\n    def __pow__(self, __x: _NegativeInteger, __modulo: None = ...) -> float: ...\\n    # positive x -> int; negative x -> float\\n    # return type must be Any as `int | float` causes too many false-positive errors\\n    @overload\\n    def __pow__(self, __x: int, __modulo: None = ...) -> Any: ...\\n    def __rpow__(self, __x: int, __mod: int | None = ...) -> Any: ...\\n    def __and__(self, __n: int) -> int: ...\\n    def __or__(self, __n: int) -> int: ...\\n    def __xor__(self, __n: int) -> int: ...\\n    def __lshift__(self, __n: int) -> int: ...\\n    def __rshift__(self, __n: int) -> int: ...\\n    def __rand__(self, __n: int) -> int: ...\\n    def __ror__(self, __n: int) -> int: ...\\n    def __rxor__(self, __n: int) -> int: ...\\n    def __rlshift__(self, __n: int) -> int: ...\\n    def __rrshift__(self, __n: int) -> int: ...\\n    def __neg__(self) -> int: ...\\n    def __pos__(self) -> int: ...\\n    def __invert__(self) -> int: ...\\n    def __trunc__(self) -> int: ...\\n    def __ceil__(self) -> int: ...\\n    def __floor__(self) -> int: ...\\n    def __round__(self, __ndigits: SupportsIndex = ...) -> int: ...\\n    def __getnewargs__(self) -> tuple[int]: ...\\n    def __eq__(self, __x: object) -> bool: ...\\n    def __ne__(self, __x: object) -> bool: ...\\n    def __lt__(self, __x: int) -> bool: ...\\n    def __le__(self, __x: int) -> bool: ...\\n    def __gt__(self, __x: int) -> bool: ...\\n    def __ge__(self, __x: int) -> bool: ...\\n    def __float__(self) -> float: ...\\n    def __int__(self) -> int: ...\\n    def __abs__(self) -> int: ...\\n    def __hash__(self) -> int: ...\\n    def __bool__(self) -> bool: ...\\n    def __index__(self) -> int: ...\\n\\nclass float:\\n    def __new__(cls: type[Self], x: SupportsFloat | SupportsIndex | str | ReadableBuffer = ...) -> Self: ...\\n    def as_integer_ratio(self) -> tuple[int, int]: ...\\n    def hex(self) -> str: ...\\n    def is_integer(self) -> bool: ...\\n    @classmethod\\n    def fromhex(cls: type[Self], __s: str) -> Self: ...\\n    @property\\n    def real(self) -> float: ...\\n    @property\\n    def imag(self) -> float: ...\\n    def conjugate(self) -> float: ...\\n    def __add__(self, __x: float) -> float: ...\\n    def __sub__(self, __x: float) -> float: ...\\n    def __mul__(self, __x: float) -> float: ...\\n    def __floordiv__(self, __x: float) -> float: ...\\n    def __truediv__(self, __x: float) -> float: ...\\n    def __mod__(self, __x: float) -> float: ...\\n    def __divmod__(self, __x: float) -> tuple[float, float]: ...\\n    @overload\\n    def __pow__(self, __x: int, __mod: None = ...) -> float: ...\\n    # positive x -> float; negative x -> complex\\n    # return type must be Any as `float | complex` causes too many false-positive errors\\n    @overload\\n    def __pow__(self, __x: float, __mod: None = ...) -> Any: ...\\n    def __radd__(self, __x: float) -> float: ...\\n    def __rsub__(self, __x: float) -> float: ...\\n    def __rmul__(self, __x: float) -> float: ...\\n    def __rfloordiv__(self, __x: float) -> float: ...\\n    def __rtruediv__(self, __x: float) -> float: ...\\n    def __rmod__(self, __x: float) -> float: ...\\n    def __rdivmod__(self, __x: float) -> tuple[float, float]: ...\\n    # Returns complex if the argument is negative.\\n    def __rpow__(self, __x: float, __mod: None = ...) -> Any: ...\\n    def __getnewargs__(self) -> tuple[float]: ...\\n    def __trunc__(self) -> int: ...\\n    if sys.version_info >= (3, 9):\\n        def __ceil__(self) -> int: ...\\n        def __floor__(self) -> int: ...\\n\\n    @overload\\n    def __round__(self, __ndigits: None = ...) -> int: ...\\n    @overload\\n    def __round__(self, __ndigits: SupportsIndex) -> float: ...\\n    def __eq__(self, __x: object) -> bool: ...\\n    def __ne__(self, __x: object) -> bool: ...\\n    def __lt__(self, __x: float) -> bool: ...\\n    def __le__(self, __x: float) -> bool: ...\\n    def __gt__(self, __x: float) -> bool: ...\\n    def __ge__(self, __x: float) -> bool: ...\\n    def __neg__(self) -> float: ...\\n    def __pos__(self) -> float: ...\\n    def __int__(self) -> int: ...\\n    def __float__(self) -> float: ...\\n    def __abs__(self) -> float: ...\\n    def __hash__(self) -> int: ...\\n    def __bool__(self) -> bool: ...\\n\\nclass complex:\\n    @overload\\n    def __new__(cls: type[Self], real: float = ..., imag: float = ...) -> Self: ...\\n    @overload\\n    def __new__(cls: type[Self], real: str | SupportsComplex | SupportsIndex | complex) -> Self: ...\\n    @property\\n    def real(self) -> float: ...\\n    @property\\n    def imag(self) -> float: ...\\n    def conjugate(self) -> complex: ...\\n    def __add__(self, __x: complex) -> complex: ...\\n    def __sub__(self, __x: complex) -> complex: ...\\n    def __mul__(self, __x: complex) -> complex: ...\\n    def __pow__(self, __x: complex, __mod: None = ...) -> complex: ...\\n    def __truediv__(self, __x: complex) -> complex: ...\\n    def __radd__(self, __x: complex) -> complex: ...\\n    def __rsub__(self, __x: complex) -> complex: ...\\n    def __rmul__(self, __x: complex) -> complex: ...\\n    def __rpow__(self, __x: complex, __mod: None = ...) -> complex: ...\\n    def __rtruediv__(self, __x: complex) -> complex: ...\\n    def __eq__(self, __x: object) -> bool: ...\\n    def __ne__(self, __x: object) -> bool: ...\\n    def __neg__(self) -> complex: ...\\n    def __pos__(self) -> complex: ...\\n    def __abs__(self) -> float: ...\\n    def __hash__(self) -> int: ...\\n    def __bool__(self) -> bool: ...\\n    if sys.version_info >= (3, 11):\\n        def __complex__(self) -> complex: ...\\n\\nclass _FormatMapMapping(Protocol):\\n    def __getitem__(self, __key: str) -> Any: ...\\n\\nclass str(Sequence[str]):\\n    @overload\\n    def __new__(cls: type[Self], object: object = ...) -> Self: ...\\n    @overload\\n    def __new__(cls: type[Self], object: ReadableBuffer, encoding: str = ..., errors: str = ...) -> Self: ...\\n    def capitalize(self) -> str: ...\\n    def casefold(self) -> str: ...\\n    def center(self, __width: SupportsIndex, __fillchar: str = ...) -> str: ...\\n    def count(self, x: str, __start: SupportsIndex | None = ..., __end: SupportsIndex | None = ...) -> int: ...\\n    def encode(self, encoding: str = ..., errors: str = ...) -> bytes: ...\\n    def endswith(\\n        self, __suffix: str | tuple[str, ...], __start: SupportsIndex | None = ..., __end: SupportsIndex | None = ...\\n    ) -> bool: ...\\n    if sys.version_info >= (3, 8):\\n        def expandtabs(self, tabsize: SupportsIndex = ...) -> str: ...\\n    else:\\n        def expandtabs(self, tabsize: int = ...) -> str: ...\\n\\n    def find(self, __sub: str, __start: SupportsIndex | None = ..., __end: SupportsIndex | None = ...) -> int: ...\\n    def format(self, *args: object, **kwargs: object) -> str: ...\\n    def format_map(self, map: _FormatMapMapping) -> str: ...\\n    def index(self, __sub: str, __start: SupportsIndex | None = ..., __end: SupportsIndex | None = ...) -> int: ...\\n    def isalnum(self) -> bool: ...\\n    def isalpha(self) -> bool: ...\\n    if sys.version_info >= (3, 7):\\n        def isascii(self) -> bool: ...\\n\\n    def isdecimal(self) -> bool: ...\\n    def isdigit(self) -> bool: ...\\n    def isidentifier(self) -> bool: ...\\n    def islower(self) -> bool: ...\\n    def isnumeric(self) -> bool: ...\\n    def isprintable(self) -> bool: ...\\n    def isspace(self) -> bool: ...\\n    def istitle(self) -> bool: ...\\n    def isupper(self) -> bool: ...\\n    def join(self, __iterable: Iterable[str]) -> str: ...\\n    def ljust(self, __width: SupportsIndex, __fillchar: str = ...) -> str: ...\\n    def lower(self) -> str: ...\\n    def lstrip(self, __chars: str | None = ...) -> str: ...\\n    def partition(self, __sep: str) -> tuple[str, str, str]: ...\\n    def replace(self, __old: str, __new: str, __count: SupportsIndex = ...) -> str: ...\\n    if sys.version_info >= (3, 9):\\n        def removeprefix(self, __prefix: str) -> str: ...\\n        def removesuffix(self, __suffix: str) -> str: ...\\n\\n    def rfind(self, __sub: str, __start: SupportsIndex | None = ..., __end: SupportsIndex | None = ...) -> int: ...\\n    def rindex(self, __sub: str, __start: SupportsIndex | None = ..., __end: SupportsIndex | None = ...) -> int: ...\\n    def rjust(self, __width: SupportsIndex, __fillchar: str = ...) -> str: ...\\n    def rpartition(self, __sep: str) -> tuple[str, str, str]: ...\\n    def rsplit(self, sep: str | None = ..., maxsplit: SupportsIndex = ...) -> list[str]: ...\\n    def rstrip(self, __chars: str | None = ...) -> str: ...\\n    def split(self, sep: str | None = ..., maxsplit: SupportsIndex = ...) -> list[str]: ...\\n    def splitlines(self, keepends: bool = ...) -> list[str]: ...\\n    def startswith(\\n        self, __prefix: str | tuple[str, ...], __start: SupportsIndex | None = ..., __end: SupportsIndex | None = ...\\n    ) -> bool: ...\\n    def strip(self, __chars: str | None = ...) -> str: ...\\n    def swapcase(self) -> str: ...\\n    def title(self) -> str: ...\\n    def translate(self, __table: Mapping[int, int | str | None] | Sequence[int | str | None]) -> str: ...\\n    def upper(self) -> str: ...\\n    def zfill(self, __width: SupportsIndex) -> str: ...\\n    @staticmethod\\n    @overload\\n    def maketrans(__x: dict[int, _T] | dict[str, _T] | dict[str | int, _T]) -> dict[int, _T]: ...\\n    @staticmethod\\n    @overload\\n    def maketrans(__x: str, __y: str, __z: str | None = ...) -> dict[int, int | None]: ...\\n    def __add__(self, __s: str) -> str: ...\\n    # Incompatible with Sequence.__contains__\\n    def __contains__(self, __o: str) -> bool: ...  # type: ignore[override]\\n    def __eq__(self, __x: object) -> bool: ...\\n    def __ge__(self, __x: str) -> bool: ...\\n    def __getitem__(self, __i: SupportsIndex | slice) -> str: ...\\n    def __gt__(self, __x: str) -> bool: ...\\n    def __hash__(self) -> int: ...\\n    def __iter__(self) -> Iterator[str]: ...\\n    def __le__(self, __x: str) -> bool: ...\\n    def __len__(self) -> int: ...\\n    def __lt__(self, __x: str) -> bool: ...\\n    def __mod__(self, __x: Any) -> str: ...\\n    def __mul__(self, __n: SupportsIndex) -> str: ...\\n    def __ne__(self, __x: object) -> bool: ...\\n    def __rmul__(self, __n: SupportsIndex) -> str: ...\\n    def __getnewargs__(self) -> tuple[str]: ...\\n\\nclass bytes(ByteString):\\n    @overload\\n    def __new__(cls: type[Self], __ints: Iterable[SupportsIndex]) -> Self: ...\\n    @overload\\n    def __new__(cls: type[Self], __string: str, encoding: str, errors: str = ...) -> Self: ...\\n    @overload\\n    def __new__(cls: type[Self], __length: SupportsIndex) -> Self: ...\\n    @overload\\n    def __new__(cls: type[Self]) -> Self: ...\\n    @overload\\n    def __new__(cls: type[Self], __o: SupportsBytes) -> Self: ...\\n    def capitalize(self) -> bytes: ...\\n    def center(self, __width: SupportsIndex, __fillchar: bytes = ...) -> bytes: ...\\n    def count(\\n        self, __sub: ReadableBuffer | SupportsIndex, __start: SupportsIndex | None = ..., __end: SupportsIndex | None = ...\\n    ) -> int: ...\\n    def decode(self, encoding: str = ..., errors: str = ...) -> str: ...\\n    def endswith(\\n        self,\\n        __suffix: ReadableBuffer | tuple[ReadableBuffer, ...],\\n        __start: SupportsIndex | None = ...,\\n        __end: SupportsIndex | None = ...,\\n    ) -> bool: ...\\n    if sys.version_info >= (3, 8):\\n        def expandtabs(self, tabsize: SupportsIndex = ...) -> bytes: ...\\n    else:\\n        def expandtabs(self, tabsize: int = ...) -> bytes: ...\\n\\n    def find(\\n        self, __sub: ReadableBuffer | SupportsIndex, __start: SupportsIndex | None = ..., __end: SupportsIndex | None = ...\\n    ) -> int: ...\\n    if sys.version_info >= (3, 8):\\n        def hex(self, sep: str | bytes = ..., bytes_per_sep: SupportsIndex = ...) -> str: ...\\n    else:\\n        def hex(self) -> str: ...\\n\\n    def index(\\n        self, __sub: ReadableBuffer | SupportsIndex, __start: SupportsIndex | None = ..., __end: SupportsIndex | None = ...\\n    ) -> int: ...\\n    def isalnum(self) -> bool: ...\\n    def isalpha(self) -> bool: ...\\n    if sys.version_info >= (3, 7):\\n        def isascii(self) -> bool: ...\\n\\n    def isdigit(self) -> bool: ...\\n    def islower(self) -> bool: ...\\n    def isspace(self) -> bool: ...\\n    def istitle(self) -> bool: ...\\n    def isupper(self) -> bool: ...\\n    def join(self, __iterable_of_bytes: Iterable[ReadableBuffer]) -> bytes: ...\\n    def ljust(self, __width: SupportsIndex, __fillchar: bytes | bytearray = ...) -> bytes: ...\\n    def lower(self) -> bytes: ...\\n    def lstrip(self, __bytes: ReadableBuffer | None = ...) -> bytes: ...\\n    def partition(self, __sep: ReadableBuffer) -> tuple[bytes, bytes, bytes]: ...\\n    def replace(self, __old: ReadableBuffer, __new: ReadableBuffer, __count: SupportsIndex = ...) -> bytes: ...\\n    if sys.version_info >= (3, 9):\\n        def removeprefix(self, __prefix: ReadableBuffer) -> bytes: ...\\n        def removesuffix(self, __suffix: ReadableBuffer) -> bytes: ...\\n\\n    def rfind(\\n        self, __sub: ReadableBuffer | SupportsIndex, __start: SupportsIndex | None = ..., __end: SupportsIndex | None = ...\\n    ) -> int: ...\\n    def rindex(\\n        self, __sub: ReadableBuffer | SupportsIndex, __start: SupportsIndex | None = ..., __end: SupportsIndex | None = ...\\n    ) -> int: ...\\n    def rjust(self, __width: SupportsIndex, __fillchar: bytes | bytearray = ...) -> bytes: ...\\n    def rpartition(self, __sep: ReadableBuffer) -> tuple[bytes, bytes, bytes]: ...\\n    def rsplit(self, sep: ReadableBuffer | None = ..., maxsplit: SupportsIndex = ...) -> list[bytes]: ...\\n    def rstrip(self, __bytes: ReadableBuffer | None = ...) -> bytes: ...\\n    def split(self, sep: ReadableBuffer | None = ..., maxsplit: SupportsIndex = ...) -> list[bytes]: ...\\n    def splitlines(self, keepends: bool = ...) -> list[bytes]: ...\\n    def startswith(\\n        self,\\n        __prefix: ReadableBuffer | tuple[ReadableBuffer, ...],\\n        __start: SupportsIndex | None = ...,\\n        __end: SupportsIndex | None = ...,\\n    ) -> bool: ...\\n    def strip(self, __bytes: ReadableBuffer | None = ...) -> bytes: ...\\n    def swapcase(self) -> bytes: ...\\n    def title(self) -> bytes: ...\\n    def translate(self, __table: ReadableBuffer | None, delete: bytes = ...) -> bytes: ...\\n    def upper(self) -> bytes: ...\\n    def zfill(self, __width: SupportsIndex) -> bytes: ...\\n    @classmethod\\n    def fromhex(cls: type[Self], __s: str) -> Self: ...\\n    @staticmethod\\n    def maketrans(__frm: ReadableBuffer, __to: ReadableBuffer) -> bytes: ...\\n    def __len__(self) -> int: ...\\n    def __iter__(self) -> Iterator[int]: ...\\n    def __hash__(self) -> int: ...\\n    @overload\\n    def __getitem__(self, __i: SupportsIndex) -> int: ...\\n    @overload\\n    def __getitem__(self, __s: slice) -> bytes: ...\\n    def __add__(self, __s: ReadableBuffer) -> bytes: ...\\n    def __mul__(self, __n: SupportsIndex) -> bytes: ...\\n    def __rmul__(self, __n: SupportsIndex) -> bytes: ...\\n    def __mod__(self, __value: Any) -> bytes: ...\\n    # Incompatible with Sequence.__contains__\\n    def __contains__(self, __o: SupportsIndex | bytes) -> bool: ...  # type: ignore[override]\\n    def __eq__(self, __x: object) -> bool: ...\\n    def __ne__(self, __x: object) -> bool: ...\\n    def __lt__(self, __x: bytes) -> bool: ...\\n    def __le__(self, __x: bytes) -> bool: ...\\n    def __gt__(self, __x: bytes) -> bool: ...\\n    def __ge__(self, __x: bytes) -> bool: ...\\n    def __getnewargs__(self) -> tuple[bytes]: ...\\n    if sys.version_info >= (3, 11):\\n        def __bytes__(self) -> bytes: ...\\n\\nclass bytearray(MutableSequence[int], ByteString):\\n    @overload\\n    def __init__(self) -> None: ...\\n    @overload\\n    def __init__(self, __ints: Iterable[SupportsIndex]) -> None: ...\\n    @overload\\n    def __init__(self, __string: str, encoding: str, errors: str = ...) -> None: ...\\n    @overload\\n    def __init__(self, __length: SupportsIndex) -> None: ...\\n    def append(self, __item: SupportsIndex) -> None: ...\\n    def capitalize(self) -> bytearray: ...\\n    def center(self, __width: SupportsIndex, __fillchar: bytes = ...) -> bytearray: ...\\n    def count(\\n        self, __sub: ReadableBuffer | SupportsIndex, __start: SupportsIndex | None = ..., __end: SupportsIndex | None = ...\\n    ) -> int: ...\\n    def copy(self) -> bytearray: ...\\n    def decode(self, encoding: str = ..., errors: str = ...) -> str: ...\\n    def endswith(\\n        self,\\n        __suffix: ReadableBuffer | tuple[ReadableBuffer, ...],\\n        __start: SupportsIndex | None = ...,\\n        __end: SupportsIndex | None = ...,\\n    ) -> bool: ...\\n    if sys.version_info >= (3, 8):\\n        def expandtabs(self, tabsize: SupportsIndex = ...) -> bytearray: ...\\n    else:\\n        def expandtabs(self, tabsize: int = ...) -> bytearray: ...\\n\\n    def extend(self, __iterable_of_ints: Iterable[SupportsIndex]) -> None: ...\\n    def find(\\n        self, __sub: ReadableBuffer | SupportsIndex, __start: SupportsIndex | None = ..., __end: SupportsIndex | None = ...\\n    ) -> int: ...\\n    if sys.version_info >= (3, 8):\\n        def hex(self, sep: str | bytes = ..., bytes_per_sep: SupportsIndex = ...) -> str: ...\\n    else:\\n        def hex(self) -> str: ...\\n\\n    def index(\\n        self, __sub: ReadableBuffer | SupportsIndex, __start: SupportsIndex | None = ..., __end: SupportsIndex | None = ...\\n    ) -> int: ...\\n    def insert(self, __index: SupportsIndex, __item: SupportsIndex) -> None: ...\\n    def isalnum(self) -> bool: ...\\n    def isalpha(self) -> bool: ...\\n    if sys.version_info >= (3, 7):\\n        def isascii(self) -> bool: ...\\n\\n    def isdigit(self) -> bool: ...\\n    def islower(self) -> bool: ...\\n    def isspace(self) -> bool: ...\\n    def istitle(self) -> bool: ...\\n    def isupper(self) -> bool: ...\\n    def join(self, __iterable_of_bytes: Iterable[ReadableBuffer]) -> bytearray: ...\\n    def ljust(self, __width: SupportsIndex, __fillchar: bytes | bytearray = ...) -> bytearray: ...\\n    def lower(self) -> bytearray: ...\\n    def lstrip(self, __bytes: ReadableBuffer | None = ...) -> bytearray: ...\\n    def partition(self, __sep: ReadableBuffer) -> tuple[bytearray, bytearray, bytearray]: ...\\n    def pop(self, __index: int = ...) -> int: ...\\n    def remove(self, __value: int) -> None: ...\\n    if sys.version_info >= (3, 9):\\n        def removeprefix(self, __prefix: ReadableBuffer) -> bytearray: ...\\n        def removesuffix(self, __suffix: ReadableBuffer) -> bytearray: ...\\n\\n    def replace(self, __old: ReadableBuffer, __new: ReadableBuffer, __count: SupportsIndex = ...) -> bytearray: ...\\n    def rfind(\\n        self, __sub: ReadableBuffer | SupportsIndex, __start: SupportsIndex | None = ..., __end: SupportsIndex | None = ...\\n    ) -> int: ...\\n    def rindex(\\n        self, __sub: ReadableBuffer | SupportsIndex, __start: SupportsIndex | None = ..., __end: SupportsIndex | None = ...\\n    ) -> int: ...\\n    def rjust(self, __width: SupportsIndex, __fillchar: bytes | bytearray = ...) -> bytearray: ...\\n    def rpartition(self, __sep: ReadableBuffer) -> tuple[bytearray, bytearray, bytearray]: ...\\n    def rsplit(self, sep: ReadableBuffer | None = ..., maxsplit: SupportsIndex = ...) -> list[bytearray]: ...\\n    def rstrip(self, __bytes: ReadableBuffer | None = ...) -> bytearray: ...\\n    def split(self, sep: ReadableBuffer | None = ..., maxsplit: SupportsIndex = ...) -> list[bytearray]: ...\\n    def splitlines(self, keepends: bool = ...) -> list[bytearray]: ...\\n    def startswith(\\n        self,\\n        __prefix: ReadableBuffer | tuple[ReadableBuffer, ...],\\n        __start: SupportsIndex | None = ...,\\n        __end: SupportsIndex | None = ...,\\n    ) -> bool: ...\\n    def strip(self, __bytes: ReadableBuffer | None = ...) -> bytearray: ...\\n    def swapcase(self) -> bytearray: ...\\n    def title(self) -> bytearray: ...\\n    def translate(self, __table: ReadableBuffer | None, delete: bytes = ...) -> bytearray: ...\\n    def upper(self) -> bytearray: ...\\n    def zfill(self, __width: SupportsIndex) -> bytearray: ...\\n    @classmethod\\n    def fromhex(cls: type[Self], __string: str) -> Self: ...\\n    @staticmethod\\n    def maketrans(__frm: ReadableBuffer, __to: ReadableBuffer) -> bytes: ...\\n    def __len__(self) -> int: ...\\n    def __iter__(self) -> Iterator[int]: ...\\n    __hash__: ClassVar[None]  # type: ignore[assignment]\\n    @overload\\n    def __getitem__(self, __i: SupportsIndex) -> int: ...\\n    @overload\\n    def __getitem__(self, __s: slice) -> bytearray: ...\\n    @overload\\n    def __setitem__(self, __i: SupportsIndex, __x: SupportsIndex) -> None: ...\\n    @overload\\n    def __setitem__(self, __s: slice, __x: Iterable[SupportsIndex] | bytes) -> None: ...\\n    def __delitem__(self, __i: SupportsIndex | slice) -> None: ...\\n    def __add__(self, __s: ReadableBuffer) -> bytearray: ...\\n    # The superclass wants us to accept Iterable[int], but that fails at runtime.\\n    def __iadd__(self: Self, __s: ReadableBuffer) -> Self: ...  # type: ignore[override]\\n    def __mul__(self, __n: SupportsIndex) -> bytearray: ...\\n    def __rmul__(self, __n: SupportsIndex) -> bytearray: ...\\n    def __imul__(self: Self, __n: SupportsIndex) -> Self: ...\\n    def __mod__(self, __value: Any) -> bytes: ...\\n    # Incompatible with Sequence.__contains__\\n    def __contains__(self, __o: SupportsIndex | ReadableBuffer) -> bool: ...  # type: ignore[override]\\n    def __eq__(self, __x: object) -> bool: ...\\n    def __ne__(self, __x: object) -> bool: ...\\n    def __lt__(self, __x: bytes) -> bool: ...\\n    def __le__(self, __x: bytes) -> bool: ...\\n    def __gt__(self, __x: bytes) -> bool: ...\\n    def __ge__(self, __x: bytes) -> bool: ...\\n    def __alloc__(self) -> int: ...\\n\\n@final\\nclass memoryview(Sized, Sequence[int]):\\n    @property\\n    def format(self) -> str: ...\\n    @property\\n    def itemsize(self) -> int: ...\\n    @property\\n    def shape(self) -> tuple[int, ...] | None: ...\\n    @property\\n    def strides(self) -> tuple[int, ...] | None: ...\\n    @property\\n    def suboffsets(self) -> tuple[int, ...] | None: ...\\n    @property\\n    def readonly(self) -> bool: ...\\n    @property\\n    def ndim(self) -> int: ...\\n    @property\\n    def obj(self) -> bytes | bytearray: ...\\n    @property\\n    def c_contiguous(self) -> bool: ...\\n    @property\\n    def f_contiguous(self) -> bool: ...\\n    @property\\n    def contiguous(self) -> bool: ...\\n    @property\\n    def nbytes(self) -> int: ...\\n    def __init__(self, obj: ReadableBuffer) -> None: ...\\n    def __enter__(self: Self) -> Self: ...\\n    def __exit__(\\n        self, __exc_type: type[BaseException] | None, __exc_val: BaseException | None, __exc_tb: TracebackType | None\\n    ) -> None: ...\\n    def cast(self, format: str, shape: list[int] | tuple[int, ...] = ...) -> memoryview: ...\\n    @overload\\n    def __getitem__(self, __i: SupportsIndex) -> int: ...\\n    @overload\\n    def __getitem__(self, __s: slice) -> memoryview: ...\\n    def __contains__(self, __x: object) -> bool: ...\\n    def __iter__(self) -> Iterator[int]: ...\\n    def __len__(self) -> int: ...\\n    @overload\\n    def __setitem__(self, __s: slice, __o: ReadableBuffer) -> None: ...\\n    @overload\\n    def __setitem__(self, __i: SupportsIndex, __o: SupportsIndex) -> None: ...\\n    if sys.version_info >= (3, 8):\\n        def tobytes(self, order: Literal[\\"C\\", \\"F\\", \\"A\\"] | None = ...) -> bytes: ...\\n    else:\\n        def tobytes(self) -> bytes: ...\\n\\n    def tolist(self) -> list[int]: ...\\n    if sys.version_info >= (3, 8):\\n        def toreadonly(self) -> memoryview: ...\\n\\n    def release(self) -> None: ...\\n    if sys.version_info >= (3, 8):\\n        def hex(self, sep: str | bytes = ..., bytes_per_sep: SupportsIndex = ...) -> str: ...\\n    else:\\n        def hex(self) -> str: ...\\n\\n@final\\nclass bool(int):\\n    def __new__(cls: type[Self], __o: object = ...) -> Self: ...\\n    # The following overloads could be represented more elegantly with a TypeVar(\\"_B\\", bool, int),\\n    # however mypy has a bug regarding TypeVar constraints (https://github.com/python/mypy/issues/11880).\\n    @overload\\n    def __and__(self, __x: bool) -> bool: ...\\n    @overload\\n    def __and__(self, __x: int) -> int: ...\\n    @overload\\n    def __or__(self, __x: bool) -> bool: ...\\n    @overload\\n    def __or__(self, __x: int) -> int: ...\\n    @overload\\n    def __xor__(self, __x: bool) -> bool: ...\\n    @overload\\n    def __xor__(self, __x: int) -> int: ...\\n    @overload\\n    def __rand__(self, __x: bool) -> bool: ...\\n    @overload\\n    def __rand__(self, __x: int) -> int: ...\\n    @overload\\n    def __ror__(self, __x: bool) -> bool: ...\\n    @overload\\n    def __ror__(self, __x: int) -> int: ...\\n    @overload\\n    def __rxor__(self, __x: bool) -> bool: ...\\n    @overload\\n    def __rxor__(self, __x: int) -> int: ...\\n    def __getnewargs__(self) -> tuple[int]: ...\\n\\n@final\\nclass slice:\\n    @property\\n    def start(self) -> Any: ...\\n    @property\\n    def step(self) -> Any: ...\\n    @property\\n    def stop(self) -> Any: ...\\n    @overload\\n    def __init__(self, __stop: Any) -> None: ...\\n    @overload\\n    def __init__(self, __start: Any, __stop: Any, __step: Any = ...) -> None: ...\\n    __hash__: ClassVar[None]  # type: ignore[assignment]\\n    def indices(self, __len: SupportsIndex) -> tuple[int, int, int]: ...\\n\\nclass tuple(Sequence[_T_co], Generic[_T_co]):\\n    def __new__(cls: type[Self], __iterable: Iterable[_T_co] = ...) -> Self: ...\\n    def __len__(self) -> int: ...\\n    def __contains__(self, __x: object) -> bool: ...\\n    @overload\\n    def __getitem__(self, __x: SupportsIndex) -> _T_co: ...\\n    @overload\\n    def __getitem__(self, __x: slice) -> tuple[_T_co, ...]: ...\\n    def __iter__(self) -> Iterator[_T_co]: ...\\n    def __lt__(self, __x: tuple[_T_co, ...]) -> bool: ...\\n    def __le__(self, __x: tuple[_T_co, ...]) -> bool: ...\\n    def __gt__(self, __x: tuple[_T_co, ...]) -> bool: ...\\n    def __ge__(self, __x: tuple[_T_co, ...]) -> bool: ...\\n    @overload\\n    def __add__(self, __x: tuple[_T_co, ...]) -> tuple[_T_co, ...]: ...\\n    @overload\\n    def __add__(self, __x: tuple[_T, ...]) -> tuple[_T_co | _T, ...]: ...\\n    def __mul__(self, __n: SupportsIndex) -> tuple[_T_co, ...]: ...\\n    def __rmul__(self, __n: SupportsIndex) -> tuple[_T_co, ...]: ...\\n    def count(self, __value: Any) -> int: ...\\n    def index(self, __value: Any, __start: SupportsIndex = ..., __stop: SupportsIndex = ...) -> int: ...\\n    if sys.version_info >= (3, 9):\\n        def __class_getitem__(cls, __item: Any) -> GenericAlias: ...\\n\\n# Doesn\'t exist at runtime, but deleting this breaks mypy. See #2999\\n@final\\nclass function:\\n    # Make sure this class definition stays roughly in line with `types.FunctionType`\\n    @property\\n    def __closure__(self) -> tuple[_Cell, ...] | None: ...\\n    __code__: CodeType\\n    __defaults__: tuple[Any, ...] | None\\n    __dict__: dict[str, Any]\\n    @property\\n    def __globals__(self) -> dict[str, Any]: ...\\n    __name__: str\\n    __qualname__: str\\n    __annotations__: dict[str, Any]\\n    __kwdefaults__: dict[str, Any]\\n    if sys.version_info >= (3, 10):\\n        @property\\n        def __builtins__(self) -> dict[str, Any]: ...\\n\\n    __module__: str\\n    # mypy uses `builtins.function.__get__` to represent methods, properties, and getset_descriptors so we type the return as Any.\\n    def __get__(self, obj: object | None, type: type | None = ...) -> Any: ...\\n\\nclass list(MutableSequence[_T], Generic[_T]):\\n    @overload\\n    def __init__(self) -> None: ...\\n    @overload\\n    def __init__(self, __iterable: Iterable[_T]) -> None: ...\\n    def copy(self) -> list[_T]: ...\\n    def append(self, __object: _T) -> None: ...\\n    def extend(self, __iterable: Iterable[_T]) -> None: ...\\n    def pop(self, __index: SupportsIndex = ...) -> _T: ...\\n    # Signature of `list.index` should be kept in line with `collections.UserList.index()`\\n    def index(self, __value: _T, __start: SupportsIndex = ..., __stop: SupportsIndex = ...) -> int: ...\\n    def count(self, __value: _T) -> int: ...\\n    def insert(self, __index: SupportsIndex, __object: _T) -> None: ...\\n    def remove(self, __value: _T) -> None: ...\\n    # Signature of `list.sort` should be kept inline with `collections.UserList.sort()`\\n    @overload\\n    def sort(self: list[SupportsRichComparisonT], *, key: None = ..., reverse: bool = ...) -> None: ...\\n    @overload\\n    def sort(self, *, key: Callable[[_T], SupportsRichComparison], reverse: bool = ...) -> None: ...\\n    def __len__(self) -> int: ...\\n    def __iter__(self) -> Iterator[_T]: ...\\n    __hash__: ClassVar[None]  # type: ignore[assignment]\\n    @overload\\n    def __getitem__(self, __i: SupportsIndex) -> _T: ...\\n    @overload\\n    def __getitem__(self, __s: slice) -> list[_T]: ...\\n    @overload\\n    def __setitem__(self, __i: SupportsIndex, __o: _T) -> None: ...\\n    @overload\\n    def __setitem__(self, __s: slice, __o: Iterable[_T]) -> None: ...\\n    def __delitem__(self, __i: SupportsIndex | slice) -> None: ...\\n    def __add__(self, __x: list[_T]) -> list[_T]: ...\\n    def __iadd__(self: Self, __x: Iterable[_T]) -> Self: ...\\n    def __mul__(self, __n: SupportsIndex) -> list[_T]: ...\\n    def __rmul__(self, __n: SupportsIndex) -> list[_T]: ...\\n    def __imul__(self: Self, __n: SupportsIndex) -> Self: ...\\n    def __contains__(self, __o: object) -> bool: ...\\n    def __reversed__(self) -> Iterator[_T]: ...\\n    def __gt__(self, __x: list[_T]) -> bool: ...\\n    def __ge__(self, __x: list[_T]) -> bool: ...\\n    def __lt__(self, __x: list[_T]) -> bool: ...\\n    def __le__(self, __x: list[_T]) -> bool: ...\\n    if sys.version_info >= (3, 9):\\n        def __class_getitem__(cls, __item: Any) -> GenericAlias: ...\\n\\nclass dict(MutableMapping[_KT, _VT], Generic[_KT, _VT]):\\n    # __init__ should be kept roughly in line with `collections.UserDict.__init__`, which has similar semantics\\n    @overload\\n    def __init__(self: dict[_KT, _VT]) -> None: ...\\n    @overload\\n    def __init__(self: dict[str, _VT], **kwargs: _VT) -> None: ...\\n    @overload\\n    def __init__(self, __map: SupportsKeysAndGetItem[_KT, _VT], **kwargs: _VT) -> None: ...\\n    @overload\\n    def __init__(self, __iterable: Iterable[tuple[_KT, _VT]], **kwargs: _VT) -> None: ...\\n    # Next overload is for dict(string.split(sep) for string in iterable)\\n    # Cannot be Iterable[Sequence[_T]] or otherwise dict([\\"foo\\", \\"bar\\", \\"baz\\"]) is not an error\\n    @overload\\n    def __init__(self: dict[str, str], __iterable: Iterable[list[str]]) -> None: ...\\n    def __new__(cls: type[Self], *args: Any, **kwargs: Any) -> Self: ...\\n    def copy(self) -> dict[_KT, _VT]: ...\\n    def keys(self) -> dict_keys[_KT, _VT]: ...\\n    def values(self) -> dict_values[_KT, _VT]: ...\\n    def items(self) -> dict_items[_KT, _VT]: ...\\n    # Signature of `dict.fromkeys` should be kept identical to `fromkeys` methods of `OrderedDict`/`ChainMap`/`UserDict` in `collections`\\n    # TODO: the true signature of `dict.fromkeys` is not expressible in the current type system.\\n    # See #3800 & https://github.com/python/typing/issues/548#issuecomment-683336963.\\n    @classmethod\\n    @overload\\n    def fromkeys(cls, __iterable: Iterable[_T], __value: None = ...) -> dict[_T, Any | None]: ...\\n    @classmethod\\n    @overload\\n    def fromkeys(cls, __iterable: Iterable[_T], __value: _S) -> dict[_T, _S]: ...\\n    # Positional-only in dict, but not in MutableMapping\\n    @overload\\n    def get(self, __key: _KT) -> _VT | None: ...\\n    @overload\\n    def get(self, __key: _KT, __default: _VT | _T) -> _VT | _T: ...\\n    @overload\\n    def pop(self, __key: _KT) -> _VT: ...\\n    @overload\\n    def pop(self, __key: _KT, __default: _VT | _T) -> _VT | _T: ...\\n    def __len__(self) -> int: ...\\n    def __getitem__(self, __k: _KT) -> _VT: ...\\n    def __setitem__(self, __k: _KT, __v: _VT) -> None: ...\\n    def __delitem__(self, __v: _KT) -> None: ...\\n    def __iter__(self) -> Iterator[_KT]: ...\\n    if sys.version_info >= (3, 8):\\n        def __reversed__(self) -> Iterator[_KT]: ...\\n    __hash__: ClassVar[None]  # type: ignore[assignment]\\n    if sys.version_info >= (3, 9):\\n        def __class_getitem__(cls, __item: Any) -> GenericAlias: ...\\n        def __or__(self, __value: Mapping[_T1, _T2]) -> dict[_KT | _T1, _VT | _T2]: ...\\n        def __ror__(self, __value: Mapping[_T1, _T2]) -> dict[_KT | _T1, _VT | _T2]: ...\\n        # dict.__ior__ should be kept roughly in line with MutableMapping.update()\\n        @overload  # type: ignore[misc]\\n        def __ior__(self: Self, __value: SupportsKeysAndGetItem[_KT, _VT]) -> Self: ...\\n        @overload\\n        def __ior__(self: Self, __value: Iterable[tuple[_KT, _VT]]) -> Self: ...\\n\\nclass set(MutableSet[_T], Generic[_T]):\\n    def __init__(self, __iterable: Iterable[_T] = ...) -> None: ...\\n    def add(self, __element: _T) -> None: ...\\n    def copy(self) -> set[_T]: ...\\n    def difference(self, *s: Iterable[Any]) -> set[_T]: ...\\n    def difference_update(self, *s: Iterable[Any]) -> None: ...\\n    def discard(self, __element: _T) -> None: ...\\n    def intersection(self, *s: Iterable[Any]) -> set[_T]: ...\\n    def intersection_update(self, *s: Iterable[Any]) -> None: ...\\n    def isdisjoint(self, __s: Iterable[Any]) -> bool: ...\\n    def issubset(self, __s: Iterable[Any]) -> bool: ...\\n    def issuperset(self, __s: Iterable[Any]) -> bool: ...\\n    def remove(self, __element: _T) -> None: ...\\n    def symmetric_difference(self, __s: Iterable[_T]) -> set[_T]: ...\\n    def symmetric_difference_update(self, __s: Iterable[_T]) -> None: ...\\n    def union(self, *s: Iterable[_S]) -> set[_T | _S]: ...\\n    def update(self, *s: Iterable[_T]) -> None: ...\\n    def __len__(self) -> int: ...\\n    def __contains__(self, __o: object) -> bool: ...\\n    def __iter__(self) -> Iterator[_T]: ...\\n    def __and__(self, __s: AbstractSet[object]) -> set[_T]: ...\\n    def __iand__(self: Self, __s: AbstractSet[object]) -> Self: ...\\n    def __or__(self, __s: AbstractSet[_S]) -> set[_T | _S]: ...\\n    def __ior__(self: Self, __s: AbstractSet[_T]) -> Self: ...  # type: ignore[override,misc]\\n    def __sub__(self, __s: AbstractSet[_T | None]) -> set[_T]: ...\\n    def __isub__(self: Self, __s: AbstractSet[object]) -> Self: ...\\n    def __xor__(self, __s: AbstractSet[_S]) -> set[_T | _S]: ...\\n    def __ixor__(self: Self, __s: AbstractSet[_T]) -> Self: ...  # type: ignore[override,misc]\\n    def __le__(self, __s: AbstractSet[object]) -> bool: ...\\n    def __lt__(self, __s: AbstractSet[object]) -> bool: ...\\n    def __ge__(self, __s: AbstractSet[object]) -> bool: ...\\n    def __gt__(self, __s: AbstractSet[object]) -> bool: ...\\n    __hash__: ClassVar[None]  # type: ignore[assignment]\\n    if sys.version_info >= (3, 9):\\n        def __class_getitem__(cls, __item: Any) -> GenericAlias: ...\\n\\nclass frozenset(AbstractSet[_T_co], Generic[_T_co]):\\n    def __init__(self, __iterable: Iterable[_T_co] = ...) -> None: ...\\n    def copy(self) -> frozenset[_T_co]: ...\\n    def difference(self, *s: Iterable[object]) -> frozenset[_T_co]: ...\\n    def intersection(self, *s: Iterable[object]) -> frozenset[_T_co]: ...\\n    def isdisjoint(self, __s: Iterable[_T_co]) -> bool: ...\\n    def issubset(self, __s: Iterable[object]) -> bool: ...\\n    def issuperset(self, __s: Iterable[object]) -> bool: ...\\n    def symmetric_difference(self, __s: Iterable[_T_co]) -> frozenset[_T_co]: ...\\n    def union(self, *s: Iterable[_S]) -> frozenset[_T_co | _S]: ...\\n    def __len__(self) -> int: ...\\n    def __contains__(self, __o: object) -> bool: ...\\n    def __iter__(self) -> Iterator[_T_co]: ...\\n    def __and__(self, __s: AbstractSet[_T_co]) -> frozenset[_T_co]: ...\\n    def __or__(self, __s: AbstractSet[_S]) -> frozenset[_T_co | _S]: ...\\n    def __sub__(self, __s: AbstractSet[_T_co]) -> frozenset[_T_co]: ...\\n    def __xor__(self, __s: AbstractSet[_S]) -> frozenset[_T_co | _S]: ...\\n    def __le__(self, __s: AbstractSet[object]) -> bool: ...\\n    def __lt__(self, __s: AbstractSet[object]) -> bool: ...\\n    def __ge__(self, __s: AbstractSet[object]) -> bool: ...\\n    def __gt__(self, __s: AbstractSet[object]) -> bool: ...\\n    if sys.version_info >= (3, 9):\\n        def __class_getitem__(cls, __item: Any) -> GenericAlias: ...\\n\\nclass enumerate(Iterator[tuple[int, _T]], Generic[_T]):\\n    def __init__(self, iterable: Iterable[_T], start: int = ...) -> None: ...\\n    def __iter__(self: Self) -> Self: ...\\n    def __next__(self) -> tuple[int, _T]: ...\\n    if sys.version_info >= (3, 9):\\n        def __class_getitem__(cls, __item: Any) -> GenericAlias: ...\\n\\n@final\\nclass range(Sequence[int]):\\n    @property\\n    def start(self) -> int: ...\\n    @property\\n    def stop(self) -> int: ...\\n    @property\\n    def step(self) -> int: ...\\n    @overload\\n    def __init__(self, __stop: SupportsIndex) -> None: ...\\n    @overload\\n    def __init__(self, __start: SupportsIndex, __stop: SupportsIndex, __step: SupportsIndex = ...) -> None: ...\\n    def count(self, __value: int) -> int: ...\\n    def index(self, __value: int) -> int: ...  # type: ignore[override]\\n    def __len__(self) -> int: ...\\n    def __contains__(self, __o: object) -> bool: ...\\n    def __iter__(self) -> Iterator[int]: ...\\n    @overload\\n    def __getitem__(self, __i: SupportsIndex) -> int: ...\\n    @overload\\n    def __getitem__(self, __s: slice) -> range: ...\\n    def __reversed__(self) -> Iterator[int]: ...\\n\\nclass property:\\n    fget: Callable[[Any], Any] | None\\n    fset: Callable[[Any, Any], None] | None\\n    fdel: Callable[[Any], None] | None\\n    __isabstractmethod__: bool\\n    def __init__(\\n        self,\\n        fget: Callable[[Any], Any] | None = ...,\\n        fset: Callable[[Any, Any], None] | None = ...,\\n        fdel: Callable[[Any], None] | None = ...,\\n        doc: str | None = ...,\\n    ) -> None: ...\\n    def getter(self, __fget: Callable[[Any], Any]) -> property: ...\\n    def setter(self, __fset: Callable[[Any, Any], None]) -> property: ...\\n    def deleter(self, __fdel: Callable[[Any], None]) -> property: ...\\n    def __get__(self, __obj: Any, __type: type | None = ...) -> Any: ...\\n    def __set__(self, __obj: Any, __value: Any) -> None: ...\\n    def __delete__(self, __obj: Any) -> None: ...\\n\\n@final\\nclass _NotImplementedType(Any):  # type: ignore[misc]\\n    # A little weird, but typing the __call__ as NotImplemented makes the error message\\n    # for NotImplemented() much better\\n    __call__: NotImplemented  # type: ignore[valid-type]\\n\\nNotImplemented: _NotImplementedType\\n\\ndef abs(__x: SupportsAbs[_T]) -> _T: ...\\ndef all(__iterable: Iterable[object]) -> bool: ...\\ndef any(__iterable: Iterable[object]) -> bool: ...\\ndef ascii(__obj: object) -> str: ...\\ndef bin(__number: int | SupportsIndex) -> str: ...\\n\\nif sys.version_info >= (3, 7):\\n    def breakpoint(*args: Any, **kws: Any) -> None: ...\\n\\ndef callable(__obj: object) -> TypeGuard[Callable[..., object]]: ...\\ndef chr(__i: int) -> str: ...\\n\\n# We define this here instead of using os.PathLike to avoid import cycle issues.\\n# See https://github.com/python/typeshed/pull/991#issuecomment-288160993\\n_AnyStr_co = TypeVar(\\"_AnyStr_co\\", str, bytes, covariant=True)\\n\\nclass _PathLike(Protocol[_AnyStr_co]):\\n    def __fspath__(self) -> _AnyStr_co: ...\\n\\nif sys.version_info >= (3, 10):\\n    def aiter(__async_iterable: _SupportsAiter[_SupportsAnextT]) -> _SupportsAnextT: ...\\n\\n    class _SupportsSynchronousAnext(Protocol[_AwaitableT_co]):\\n        def __anext__(self) -> _AwaitableT_co: ...\\n\\n    @overload\\n    # `anext` is not, in fact, an async function. When default is not provided\\n    # `anext` is just a passthrough for `obj.__anext__`\\n    # See discussion in #7491 and pure-Python implementation of `anext` at https://github.com/python/cpython/blob/ea786a882b9ed4261eafabad6011bc7ef3b5bf94/Lib/test/test_asyncgen.py#L52-L80\\n    def anext(__i: _SupportsSynchronousAnext[_AwaitableT]) -> _AwaitableT: ...\\n    @overload\\n    async def anext(__i: SupportsAnext[_T], default: _VT) -> _T | _VT: ...\\n\\n# TODO: `compile` has a more precise return type in reality; work on a way of expressing that?\\nif sys.version_info >= (3, 8):\\n    def compile(\\n        source: str | ReadableBuffer | AST,\\n        filename: str | ReadableBuffer | _PathLike[Any],\\n        mode: str,\\n        flags: int = ...,\\n        dont_inherit: int = ...,\\n        optimize: int = ...,\\n        *,\\n        _feature_version: int = ...,\\n    ) -> Any: ...\\n\\nelse:\\n    def compile(\\n        source: str | ReadableBuffer | AST,\\n        filename: str | ReadableBuffer | _PathLike[Any],\\n        mode: str,\\n        flags: int = ...,\\n        dont_inherit: int = ...,\\n        optimize: int = ...,\\n    ) -> Any: ...\\n\\ndef copyright() -> None: ...\\ndef credits() -> None: ...\\ndef delattr(__obj: object, __name: str) -> None: ...\\ndef dir(__o: object = ...) -> list[str]: ...\\n@overload\\ndef divmod(__x: SupportsDivMod[_T_contra, _T_co], __y: _T_contra) -> _T_co: ...\\n@overload\\ndef divmod(__x: _T_contra, __y: SupportsRDivMod[_T_contra, _T_co]) -> _T_co: ...\\n\\n# The `globals` argument to `eval` has to be `dict[str, Any]` rather than `dict[str, object]` due to invariance.\\n# (The `globals` argument has to be a \\"real dict\\", rather than any old mapping, unlike the `locals` argument.)\\ndef eval(\\n    __source: str | ReadableBuffer | CodeType, __globals: dict[str, Any] | None = ..., __locals: Mapping[str, object] | None = ...\\n) -> Any: ...\\n\\n# Comment above regarding `eval` applies to `exec` as well\\ndef exec(\\n    __source: str | ReadableBuffer | CodeType, __globals: dict[str, Any] | None = ..., __locals: Mapping[str, object] | None = ...\\n) -> None: ...\\ndef exit(code: object = ...) -> NoReturn: ...\\n\\nclass filter(Iterator[_T], Generic[_T]):\\n    @overload\\n    def __init__(self, __function: None, __iterable: Iterable[_T | None]) -> None: ...\\n    @overload\\n    def __init__(self, __function: Callable[[_S], TypeGuard[_T]], __iterable: Iterable[_S]) -> None: ...\\n    @overload\\n    def __init__(self, __function: Callable[[_T], Any], __iterable: Iterable[_T]) -> None: ...\\n    def __iter__(self: Self) -> Self: ...\\n    def __next__(self) -> _T: ...\\n\\ndef format(__value: object, __format_spec: str = ...) -> str: ...  # TODO unicode\\n@overload\\ndef getattr(__o: object, __name: str) -> Any: ...\\n\\n# While technically covered by the last overload, spelling out the types for None, bool\\n# and basic containers help mypy out in some tricky situations involving type context\\n# (aka bidirectional inference)\\n@overload\\ndef getattr(__o: object, __name: str, __default: None) -> Any | None: ...\\n@overload\\ndef getattr(__o: object, __name: str, __default: bool) -> Any | bool: ...\\n@overload\\ndef getattr(__o: object, name: str, __default: list[Any]) -> Any | list[Any]: ...\\n@overload\\ndef getattr(__o: object, name: str, __default: dict[Any, Any]) -> Any | dict[Any, Any]: ...\\n@overload\\ndef getattr(__o: object, __name: str, __default: _T) -> Any | _T: ...\\ndef globals() -> dict[str, Any]: ...\\ndef hasattr(__obj: object, __name: str) -> bool: ...\\ndef hash(__obj: object) -> int: ...\\ndef help(request: object = ...) -> None: ...\\ndef hex(__number: int | SupportsIndex) -> str: ...\\ndef id(__obj: object) -> int: ...\\ndef input(__prompt: object = ...) -> str: ...\\n@overload\\ndef iter(__iterable: _SupportsIter[_SupportsNextT]) -> _SupportsNextT: ...\\n@overload\\ndef iter(__function: Callable[[], _T | None], __sentinel: None) -> Iterator[_T]: ...\\n@overload\\ndef iter(__function: Callable[[], _T], __sentinel: object) -> Iterator[_T]: ...\\n\\n# We need recursive types to express the type of the second argument to `isinstance` properly, hence the use of `Any`\\nif sys.version_info >= (3, 10):\\n    def isinstance(\\n        __obj: object, __class_or_tuple: type | types.UnionType | tuple[type | types.UnionType | tuple[Any, ...], ...]\\n    ) -> bool: ...\\n    def issubclass(\\n        __cls: type, __class_or_tuple: type | types.UnionType | tuple[type | types.UnionType | tuple[Any, ...], ...]\\n    ) -> bool: ...\\n\\nelse:\\n    def isinstance(__obj: object, __class_or_tuple: type | tuple[type | tuple[Any, ...], ...]) -> bool: ...\\n    def issubclass(__cls: type, __class_or_tuple: type | tuple[type | tuple[Any, ...], ...]) -> bool: ...\\n\\ndef len(__obj: Sized) -> int: ...\\ndef license() -> None: ...\\ndef locals() -> dict[str, Any]: ...\\n\\nclass map(Iterator[_S], Generic[_S]):\\n    @overload\\n    def __init__(self, __func: Callable[[_T1], _S], __iter1: Iterable[_T1]) -> None: ...\\n    @overload\\n    def __init__(self, __func: Callable[[_T1, _T2], _S], __iter1: Iterable[_T1], __iter2: Iterable[_T2]) -> None: ...\\n    @overload\\n    def __init__(\\n        self, __func: Callable[[_T1, _T2, _T3], _S], __iter1: Iterable[_T1], __iter2: Iterable[_T2], __iter3: Iterable[_T3]\\n    ) -> None: ...\\n    @overload\\n    def __init__(\\n        self,\\n        __func: Callable[[_T1, _T2, _T3, _T4], _S],\\n        __iter1: Iterable[_T1],\\n        __iter2: Iterable[_T2],\\n        __iter3: Iterable[_T3],\\n        __iter4: Iterable[_T4],\\n    ) -> None: ...\\n    @overload\\n    def __init__(\\n        self,\\n        __func: Callable[[_T1, _T2, _T3, _T4, _T5], _S],\\n        __iter1: Iterable[_T1],\\n        __iter2: Iterable[_T2],\\n        __iter3: Iterable[_T3],\\n        __iter4: Iterable[_T4],\\n        __iter5: Iterable[_T5],\\n    ) -> None: ...\\n    @overload\\n    def __init__(\\n        self,\\n        __func: Callable[..., _S],\\n        __iter1: Iterable[Any],\\n        __iter2: Iterable[Any],\\n        __iter3: Iterable[Any],\\n        __iter4: Iterable[Any],\\n        __iter5: Iterable[Any],\\n        __iter6: Iterable[Any],\\n        *iterables: Iterable[Any],\\n    ) -> None: ...\\n    def __iter__(self: Self) -> Self: ...\\n    def __next__(self) -> _S: ...\\n\\n@overload\\ndef max(\\n    __arg1: SupportsRichComparisonT, __arg2: SupportsRichComparisonT, *_args: SupportsRichComparisonT, key: None = ...\\n) -> SupportsRichComparisonT: ...\\n@overload\\ndef max(__arg1: _T, __arg2: _T, *_args: _T, key: Callable[[_T], SupportsRichComparison]) -> _T: ...\\n@overload\\ndef max(__iterable: Iterable[SupportsRichComparisonT], *, key: None = ...) -> SupportsRichComparisonT: ...\\n@overload\\ndef max(__iterable: Iterable[_T], *, key: Callable[[_T], SupportsRichComparison]) -> _T: ...\\n@overload\\ndef max(__iterable: Iterable[SupportsRichComparisonT], *, key: None = ..., default: _T) -> SupportsRichComparisonT | _T: ...\\n@overload\\ndef max(__iterable: Iterable[_T1], *, key: Callable[[_T1], SupportsRichComparison], default: _T2) -> _T1 | _T2: ...\\n@overload\\ndef min(\\n    __arg1: SupportsRichComparisonT, __arg2: SupportsRichComparisonT, *_args: SupportsRichComparisonT, key: None = ...\\n) -> SupportsRichComparisonT: ...\\n@overload\\ndef min(__arg1: _T, __arg2: _T, *_args: _T, key: Callable[[_T], SupportsRichComparison]) -> _T: ...\\n@overload\\ndef min(__iterable: Iterable[SupportsRichComparisonT], *, key: None = ...) -> SupportsRichComparisonT: ...\\n@overload\\ndef min(__iterable: Iterable[_T], *, key: Callable[[_T], SupportsRichComparison]) -> _T: ...\\n@overload\\ndef min(__iterable: Iterable[SupportsRichComparisonT], *, key: None = ..., default: _T) -> SupportsRichComparisonT | _T: ...\\n@overload\\ndef min(__iterable: Iterable[_T1], *, key: Callable[[_T1], SupportsRichComparison], default: _T2) -> _T1 | _T2: ...\\n@overload\\ndef next(__i: SupportsNext[_T]) -> _T: ...\\n@overload\\ndef next(__i: SupportsNext[_T], __default: _VT) -> _T | _VT: ...\\ndef oct(__number: int | SupportsIndex) -> str: ...\\n\\n_OpenFile = StrOrBytesPath | int\\n_Opener: TypeAlias = Callable[[str, int], int]\\n\\n# Text mode: always returns a TextIOWrapper\\n@overload\\ndef open(\\n    file: _OpenFile,\\n    mode: OpenTextMode = ...,\\n    buffering: int = ...,\\n    encoding: str | None = ...,\\n    errors: str | None = ...,\\n    newline: str | None = ...,\\n    closefd: bool = ...,\\n    opener: _Opener | None = ...,\\n) -> TextIOWrapper: ...\\n\\n# Unbuffered binary mode: returns a FileIO\\n@overload\\ndef open(\\n    file: _OpenFile,\\n    mode: OpenBinaryMode,\\n    buffering: Literal[0],\\n    encoding: None = ...,\\n    errors: None = ...,\\n    newline: None = ...,\\n    closefd: bool = ...,\\n    opener: _Opener | None = ...,\\n) -> FileIO: ...\\n\\n# Buffering is on: return BufferedRandom, BufferedReader, or BufferedWriter\\n@overload\\ndef open(\\n    file: _OpenFile,\\n    mode: OpenBinaryModeUpdating,\\n    buffering: Literal[-1, 1] = ...,\\n    encoding: None = ...,\\n    errors: None = ...,\\n    newline: None = ...,\\n    closefd: bool = ...,\\n    opener: _Opener | None = ...,\\n) -> BufferedRandom: ...\\n@overload\\ndef open(\\n    file: _OpenFile,\\n    mode: OpenBinaryModeWriting,\\n    buffering: Literal[-1, 1] = ...,\\n    encoding: None = ...,\\n    errors: None = ...,\\n    newline: None = ...,\\n    closefd: bool = ...,\\n    opener: _Opener | None = ...,\\n) -> BufferedWriter: ...\\n@overload\\ndef open(\\n    file: _OpenFile,\\n    mode: OpenBinaryModeReading,\\n    buffering: Literal[-1, 1] = ...,\\n    encoding: None = ...,\\n    errors: None = ...,\\n    newline: None = ...,\\n    closefd: bool = ...,\\n    opener: _Opener | None = ...,\\n) -> BufferedReader: ...\\n\\n# Buffering cannot be determined: fall back to BinaryIO\\n@overload\\ndef open(\\n    file: _OpenFile,\\n    mode: OpenBinaryMode,\\n    buffering: int = ...,\\n    encoding: None = ...,\\n    errors: None = ...,\\n    newline: None = ...,\\n    closefd: bool = ...,\\n    opener: _Opener | None = ...,\\n) -> BinaryIO: ...\\n\\n# Fallback if mode is not specified\\n@overload\\ndef open(\\n    file: _OpenFile,\\n    mode: str,\\n    buffering: int = ...,\\n    encoding: str | None = ...,\\n    errors: str | None = ...,\\n    newline: str | None = ...,\\n    closefd: bool = ...,\\n    opener: _Opener | None = ...,\\n) -> IO[Any]: ...\\ndef ord(__c: str | bytes | bytearray) -> int: ...\\n\\nclass _SupportsWriteAndFlush(SupportsWrite[_T_contra], Protocol[_T_contra]):\\n    def flush(self) -> None: ...\\n\\n@overload\\ndef print(\\n    *values: object,\\n    sep: str | None = ...,\\n    end: str | None = ...,\\n    file: SupportsWrite[str] | None = ...,\\n    flush: Literal[False] = ...,\\n) -> None: ...\\n@overload\\ndef print(\\n    *values: object, sep: str | None = ..., end: str | None = ..., file: _SupportsWriteAndFlush[str] | None = ..., flush: bool\\n) -> None: ...\\n\\n_E = TypeVar(\\"_E\\", contravariant=True)\\n_M = TypeVar(\\"_M\\", contravariant=True)\\n\\nclass _SupportsPow2(Protocol[_E, _T_co]):\\n    def __pow__(self, __other: _E) -> _T_co: ...\\n\\nclass _SupportsPow3NoneOnly(Protocol[_E, _T_co]):\\n    def __pow__(self, __other: _E, __modulo: None = ...) -> _T_co: ...\\n\\nclass _SupportsPow3(Protocol[_E, _M, _T_co]):\\n    def __pow__(self, __other: _E, __modulo: _M) -> _T_co: ...\\n\\n_SupportsSomeKindOfPow = _SupportsPow2[Any, Any] | _SupportsPow3NoneOnly[Any, Any] | _SupportsPow3[Any, Any, Any]\\n\\nif sys.version_info >= (3, 8):\\n    @overload\\n    def pow(base: int, exp: int, mod: Literal[0]) -> NoReturn: ...\\n    @overload\\n    def pow(base: int, exp: int, mod: int) -> int: ...\\n    @overload\\n    def pow(base: int, exp: Literal[0], mod: None = ...) -> Literal[1]: ...  # type: ignore[misc]\\n    @overload\\n    def pow(base: int, exp: _PositiveInteger, mod: None = ...) -> int: ...  # type: ignore[misc]\\n    @overload\\n    def pow(base: int, exp: _NegativeInteger, mod: None = ...) -> float: ...  # type: ignore[misc]\\n    # int base & positive-int exp -> int; int base & negative-int exp -> float\\n    # return type must be Any as `int | float` causes too many false-positive errors\\n    @overload\\n    def pow(base: int, exp: int, mod: None = ...) -> Any: ...\\n    @overload\\n    def pow(base: float, exp: int, mod: None = ...) -> float: ...\\n    # float base & float exp could return float or complex\\n    # return type must be Any (same as complex base, complex exp),\\n    # as `float | complex` causes too many false-positive errors\\n    @overload\\n    def pow(base: float, exp: complex | _SupportsSomeKindOfPow, mod: None = ...) -> Any: ...\\n    @overload\\n    def pow(base: complex, exp: complex | _SupportsSomeKindOfPow, mod: None = ...) -> complex: ...\\n    @overload\\n    def pow(base: _SupportsPow2[_E, _T_co], exp: _E, mod: None = ...) -> _T_co: ...\\n    @overload\\n    def pow(base: _SupportsPow3NoneOnly[_E, _T_co], exp: _E, mod: None = ...) -> _T_co: ...\\n    @overload\\n    def pow(base: _SupportsPow3[_E, _M, _T_co], exp: _E, mod: _M = ...) -> _T_co: ...\\n    @overload\\n    def pow(base: _SupportsSomeKindOfPow, exp: float, mod: None = ...) -> Any: ...\\n    @overload\\n    def pow(base: _SupportsSomeKindOfPow, exp: complex, mod: None = ...) -> complex: ...\\n\\nelse:\\n    @overload\\n    def pow(__base: int, __exp: int, __mod: Literal[0]) -> NoReturn: ...\\n    @overload\\n    def pow(__base: int, __exp: int, __mod: int) -> int: ...\\n    @overload\\n    def pow(__base: int, __exp: Literal[0], __mod: None = ...) -> Literal[1]: ...  # type: ignore[misc]\\n    @overload\\n    def pow(__base: int, __exp: _PositiveInteger, __mod: None = ...) -> int: ...  # type: ignore[misc]\\n    @overload\\n    def pow(__base: int, __exp: _NegativeInteger, __mod: None = ...) -> float: ...  # type: ignore[misc]\\n    @overload\\n    def pow(__base: int, __exp: int, __mod: None = ...) -> Any: ...\\n    @overload\\n    def pow(__base: float, __exp: int, __mod: None = ...) -> float: ...\\n    @overload\\n    def pow(__base: float, __exp: complex | _SupportsSomeKindOfPow, __mod: None = ...) -> Any: ...\\n    @overload\\n    def pow(__base: complex, __exp: complex | _SupportsSomeKindOfPow, __mod: None = ...) -> complex: ...\\n    @overload\\n    def pow(__base: _SupportsPow2[_E, _T_co], __exp: _E, __mod: None = ...) -> _T_co: ...\\n    @overload\\n    def pow(__base: _SupportsPow3NoneOnly[_E, _T_co], __exp: _E, __mod: None = ...) -> _T_co: ...\\n    @overload\\n    def pow(__base: _SupportsPow3[_E, _M, _T_co], __exp: _E, __mod: _M = ...) -> _T_co: ...\\n    @overload\\n    def pow(__base: _SupportsSomeKindOfPow, __exp: float, __mod: None = ...) -> Any: ...\\n    @overload\\n    def pow(__base: _SupportsSomeKindOfPow, __exp: complex, __mod: None = ...) -> complex: ...\\n\\ndef quit(code: object = ...) -> NoReturn: ...\\n\\nclass reversed(Iterator[_T], Generic[_T]):\\n    @overload\\n    def __init__(self, __sequence: Reversible[_T]) -> None: ...\\n    @overload\\n    def __init__(self, __sequence: SupportsLenAndGetItem[_T]) -> None: ...\\n    def __iter__(self: Self) -> Self: ...\\n    def __next__(self) -> _T: ...\\n    def __length_hint__(self) -> int: ...\\n\\ndef repr(__obj: object) -> str: ...\\n@overload\\ndef round(number: SupportsRound[Any]) -> int: ...\\n@overload\\ndef round(number: SupportsRound[Any], ndigits: None) -> int: ...\\n@overload\\ndef round(number: SupportsRound[_T], ndigits: SupportsIndex) -> _T: ...\\n\\n# See https://github.com/python/typeshed/pull/6292#discussion_r748875189\\n# for why arg 3 of `setattr` should be annotated with `Any` and not `object`\\ndef setattr(__obj: object, __name: str, __value: Any) -> None: ...\\n@overload\\ndef sorted(\\n    __iterable: Iterable[SupportsRichComparisonT], *, key: None = ..., reverse: bool = ...\\n) -> list[SupportsRichComparisonT]: ...\\n@overload\\ndef sorted(__iterable: Iterable[_T], *, key: Callable[[_T], SupportsRichComparison], reverse: bool = ...) -> list[_T]: ...\\n\\nclass _SupportsSum(Protocol):\\n    def __add__(self, __x: Any) -> Any: ...\\n\\n_SumT = TypeVar(\\"_SumT\\", bound=_SupportsSum)\\n_SumS = TypeVar(\\"_SumS\\", bound=_SupportsSum)\\n\\n@overload\\ndef sum(__iterable: Iterable[_SumT]) -> _SumT | Literal[0]: ...\\n\\nif sys.version_info >= (3, 8):\\n    @overload\\n    def sum(__iterable: Iterable[_SumT], start: _SumS) -> _SumT | _SumS: ...\\n\\nelse:\\n    @overload\\n    def sum(__iterable: Iterable[_SumT], __start: _SumS) -> _SumT | _SumS: ...\\n\\n# The argument to `vars()` has to have a `__dict__` attribute, so can\'t be annotated with `object`\\n# (A \\"SupportsDunderDict\\" protocol doesn\'t work)\\ndef vars(__object: Any = ...) -> dict[str, Any]: ...\\n\\nclass zip(Iterator[_T_co], Generic[_T_co]):\\n    if sys.version_info >= (3, 10):\\n        @overload\\n        def __new__(cls, __iter1: Iterable[_T1], *, strict: bool = ...) -> zip[tuple[_T1]]: ...\\n        @overload\\n        def __new__(cls, __iter1: Iterable[_T1], __iter2: Iterable[_T2], *, strict: bool = ...) -> zip[tuple[_T1, _T2]]: ...\\n        @overload\\n        def __new__(\\n            cls, __iter1: Iterable[_T1], __iter2: Iterable[_T2], __iter3: Iterable[_T3], *, strict: bool = ...\\n        ) -> zip[tuple[_T1, _T2, _T3]]: ...\\n        @overload\\n        def __new__(\\n            cls,\\n            __iter1: Iterable[_T1],\\n            __iter2: Iterable[_T2],\\n            __iter3: Iterable[_T3],\\n            __iter4: Iterable[_T4],\\n            *,\\n            strict: bool = ...,\\n        ) -> zip[tuple[_T1, _T2, _T3, _T4]]: ...\\n        @overload\\n        def __new__(\\n            cls,\\n            __iter1: Iterable[_T1],\\n            __iter2: Iterable[_T2],\\n            __iter3: Iterable[_T3],\\n            __iter4: Iterable[_T4],\\n            __iter5: Iterable[_T5],\\n            *,\\n            strict: bool = ...,\\n        ) -> zip[tuple[_T1, _T2, _T3, _T4, _T5]]: ...\\n        @overload\\n        def __new__(\\n            cls,\\n            __iter1: Iterable[Any],\\n            __iter2: Iterable[Any],\\n            __iter3: Iterable[Any],\\n            __iter4: Iterable[Any],\\n            __iter5: Iterable[Any],\\n            __iter6: Iterable[Any],\\n            *iterables: Iterable[Any],\\n            strict: bool = ...,\\n        ) -> zip[tuple[Any, ...]]: ...\\n    else:\\n        @overload\\n        def __new__(cls, __iter1: Iterable[_T1]) -> zip[tuple[_T1]]: ...\\n        @overload\\n        def __new__(cls, __iter1: Iterable[_T1], __iter2: Iterable[_T2]) -> zip[tuple[_T1, _T2]]: ...\\n        @overload\\n        def __new__(cls, __iter1: Iterable[_T1], __iter2: Iterable[_T2], __iter3: Iterable[_T3]) -> zip[tuple[_T1, _T2, _T3]]: ...\\n        @overload\\n        def __new__(\\n            cls, __iter1: Iterable[_T1], __iter2: Iterable[_T2], __iter3: Iterable[_T3], __iter4: Iterable[_T4]\\n        ) -> zip[tuple[_T1, _T2, _T3, _T4]]: ...\\n        @overload\\n        def __new__(\\n            cls,\\n            __iter1: Iterable[_T1],\\n            __iter2: Iterable[_T2],\\n            __iter3: Iterable[_T3],\\n            __iter4: Iterable[_T4],\\n            __iter5: Iterable[_T5],\\n        ) -> zip[tuple[_T1, _T2, _T3, _T4, _T5]]: ...\\n        @overload\\n        def __new__(\\n            cls,\\n            __iter1: Iterable[Any],\\n            __iter2: Iterable[Any],\\n            __iter3: Iterable[Any],\\n            __iter4: Iterable[Any],\\n            __iter5: Iterable[Any],\\n            __iter6: Iterable[Any],\\n            *iterables: Iterable[Any],\\n        ) -> zip[tuple[Any, ...]]: ...\\n\\n    def __iter__(self: Self) -> Self: ...\\n    def __next__(self) -> _T_co: ...\\n\\n# Signature of `builtins.__import__` should be kept identical to `importlib.__import__`\\n# Return type of `__import__` should be kept the same as return type of `importlib.import_module`\\ndef __import__(\\n    name: str,\\n    globals: Mapping[str, object] | None = ...,\\n    locals: Mapping[str, object] | None = ...,\\n    fromlist: Sequence[str] = ...,\\n    level: int = ...,\\n) -> types.ModuleType: ...\\ndef __build_class__(__func: Callable[[], _Cell | Any], __name: str, *bases: Any, metaclass: Any = ..., **kwds: Any) -> Any: ...\\n\\n# Actually the type of Ellipsis is <type \'ellipsis\'>, but since it\'s\\n# not exposed anywhere under that name, we make it private here.\\n@final\\nclass ellipsis: ...\\n\\nEllipsis: ellipsis\\n\\nclass BaseException:\\n    args: tuple[Any, ...]\\n    __cause__: BaseException | None\\n    __context__: BaseException | None\\n    __suppress_context__: bool\\n    __traceback__: TracebackType | None\\n    if sys.version_info >= (3, 11):\\n        __note__: str | None\\n    def __init__(self, *args: object) -> None: ...\\n    def with_traceback(self: Self, __tb: TracebackType | None) -> Self: ...\\n\\nclass GeneratorExit(BaseException): ...\\nclass KeyboardInterrupt(BaseException): ...\\n\\nclass SystemExit(BaseException):\\n    code: int\\n\\nclass Exception(BaseException): ...\\n\\nclass StopIteration(Exception):\\n    value: Any\\n\\n_StandardError = Exception\\n\\nclass OSError(Exception):\\n    errno: int\\n    strerror: str\\n    # filename, filename2 are actually str | bytes | None\\n    filename: Any\\n    filename2: Any\\n    if sys.platform == \\"win32\\":\\n        winerror: int\\n\\nEnvironmentError = OSError\\nIOError = OSError\\nif sys.platform == \\"win32\\":\\n    WindowsError = OSError\\n\\nclass ArithmeticError(_StandardError): ...\\nclass AssertionError(_StandardError): ...\\n\\nclass AttributeError(_StandardError):\\n    if sys.version_info >= (3, 10):\\n        name: str\\n        obj: object\\n\\nclass BufferError(_StandardError): ...\\nclass EOFError(_StandardError): ...\\n\\nclass ImportError(_StandardError):\\n    def __init__(self, *args: object, name: str | None = ..., path: str | None = ...) -> None: ...\\n    name: str | None\\n    path: str | None\\n    msg: str  # undocumented\\n\\nclass LookupError(_StandardError): ...\\nclass MemoryError(_StandardError): ...\\n\\nclass NameError(_StandardError):\\n    if sys.version_info >= (3, 10):\\n        name: str\\n\\nclass ReferenceError(_StandardError): ...\\nclass RuntimeError(_StandardError): ...\\n\\nclass StopAsyncIteration(Exception):\\n    value: Any\\n\\nclass SyntaxError(_StandardError):\\n    msg: str\\n    lineno: int | None\\n    offset: int | None\\n    text: str | None\\n    filename: str | None\\n    if sys.version_info >= (3, 10):\\n        end_lineno: int | None\\n        end_offset: int | None\\n\\nclass SystemError(_StandardError): ...\\nclass TypeError(_StandardError): ...\\nclass ValueError(_StandardError): ...\\nclass FloatingPointError(ArithmeticError): ...\\nclass OverflowError(ArithmeticError): ...\\nclass ZeroDivisionError(ArithmeticError): ...\\nclass ModuleNotFoundError(ImportError): ...\\nclass IndexError(LookupError): ...\\nclass KeyError(LookupError): ...\\nclass UnboundLocalError(NameError): ...\\n\\nclass BlockingIOError(OSError):\\n    characters_written: int\\n\\nclass ChildProcessError(OSError): ...\\nclass ConnectionError(OSError): ...\\nclass BrokenPipeError(ConnectionError): ...\\nclass ConnectionAbortedError(ConnectionError): ...\\nclass ConnectionRefusedError(ConnectionError): ...\\nclass ConnectionResetError(ConnectionError): ...\\nclass FileExistsError(OSError): ...\\nclass FileNotFoundError(OSError): ...\\nclass InterruptedError(OSError): ...\\nclass IsADirectoryError(OSError): ...\\nclass NotADirectoryError(OSError): ...\\nclass PermissionError(OSError): ...\\nclass ProcessLookupError(OSError): ...\\nclass TimeoutError(OSError): ...\\nclass NotImplementedError(RuntimeError): ...\\nclass RecursionError(RuntimeError): ...\\nclass IndentationError(SyntaxError): ...\\nclass TabError(IndentationError): ...\\nclass UnicodeError(ValueError): ...\\n\\nclass UnicodeDecodeError(UnicodeError):\\n    encoding: str\\n    object: bytes\\n    start: int\\n    end: int\\n    reason: str\\n    def __init__(self, __encoding: str, __object: ReadableBuffer, __start: int, __end: int, __reason: str) -> None: ...\\n\\nclass UnicodeEncodeError(UnicodeError):\\n    encoding: str\\n    object: str\\n    start: int\\n    end: int\\n    reason: str\\n    def __init__(self, __encoding: str, __object: str, __start: int, __end: int, __reason: str) -> None: ...\\n\\nclass UnicodeTranslateError(UnicodeError):\\n    encoding: None\\n    object: str\\n    start: int\\n    end: int\\n    reason: str\\n    def __init__(self, __object: str, __start: int, __end: int, __reason: str) -> None: ...\\n\\nclass Warning(Exception): ...\\nclass UserWarning(Warning): ...\\nclass DeprecationWarning(Warning): ...\\nclass SyntaxWarning(Warning): ...\\nclass RuntimeWarning(Warning): ...\\nclass FutureWarning(Warning): ...\\nclass PendingDeprecationWarning(Warning): ...\\nclass ImportWarning(Warning): ...\\nclass UnicodeWarning(Warning): ...\\nclass BytesWarning(Warning): ...\\nclass ResourceWarning(Warning): ...\\n\\nif sys.version_info >= (3, 10):\\n    class EncodingWarning(Warning): ...\\n\\nif sys.version_info >= (3, 11):\\n    _BaseExceptionT_co = TypeVar(\\"_BaseExceptionT_co\\", bound=BaseException, covariant=True)\\n    _BaseExceptionT = TypeVar(\\"_BaseExceptionT\\", bound=BaseException)\\n    _ExceptionT_co = TypeVar(\\"_ExceptionT_co\\", bound=Exception, covariant=True)\\n    _ExceptionT = TypeVar(\\"_ExceptionT\\", bound=Exception)\\n\\n    class BaseExceptionGroup(BaseException, Generic[_BaseExceptionT_co]):\\n        def __new__(cls: type[Self], __message: str, __exceptions: Sequence[_BaseExceptionT_co]) -> Self: ...\\n        @property\\n        def message(self) -> str: ...\\n        @property\\n        def exceptions(self) -> tuple[_BaseExceptionT_co | BaseExceptionGroup[_BaseExceptionT_co], ...]: ...\\n        @overload\\n        def subgroup(\\n            self, __condition: type[_BaseExceptionT] | tuple[type[_BaseExceptionT], ...]\\n        ) -> BaseExceptionGroup[_BaseExceptionT] | None: ...\\n        @overload\\n        def subgroup(self: Self, __condition: Callable[[_BaseExceptionT_co], bool]) -> Self | None: ...\\n        @overload\\n        def split(\\n            self: Self, __condition: type[_BaseExceptionT] | tuple[type[_BaseExceptionT], ...]\\n        ) -> tuple[BaseExceptionGroup[_BaseExceptionT] | None, Self | None]: ...\\n        @overload\\n        def split(self: Self, __condition: Callable[[_BaseExceptionT_co], bool]) -> tuple[Self | None, Self | None]: ...\\n        def derive(self: Self, __excs: Sequence[_BaseExceptionT_co]) -> Self: ...\\n\\n    class ExceptionGroup(BaseExceptionGroup[_ExceptionT_co], Exception):\\n        def __new__(cls: type[Self], __message: str, __exceptions: Sequence[_ExceptionT_co]) -> Self: ...\\n        @property\\n        def exceptions(self) -> tuple[_ExceptionT_co | ExceptionGroup[_ExceptionT_co], ...]: ...\\n        # We accept a narrower type, but that\'s OK.\\n        @overload  # type: ignore[override]\\n        def subgroup(\\n            self, __condition: type[_ExceptionT] | tuple[type[_ExceptionT], ...]\\n        ) -> ExceptionGroup[_ExceptionT] | None: ...\\n        @overload\\n        def subgroup(self: Self, __condition: Callable[[_ExceptionT_co], bool]) -> Self | None: ...\\n        @overload  # type: ignore[override]\\n        def split(\\n            self: Self, __condition: type[_ExceptionT] | tuple[type[_ExceptionT], ...]\\n        ) -> tuple[ExceptionGroup[_ExceptionT] | None, Self | None]: ...\\n        @overload\\n        def split(self: Self, __condition: Callable[[_ExceptionT_co], bool]) -> tuple[Self | None, Self | None]: ...\\n"}}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 252\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":12},"contentChanges":[{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":4}},"rangeLength":0,"text":"i"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 252\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":13},"contentChanges":[{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":5}},"rangeLength":0,"text":"n"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 252\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":14},"contentChanges":[{"range":{"start":{"line":18,"character":6},"end":{"line":18,"character":6}},"rangeLength":0,"text":"t"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 252\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":15},"contentChanges":[{"range":{"start":{"line":18,"character":7},"end":{"line":18,"character":7}},"rangeLength":0,"text":" "}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 251\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":16},"contentChanges":[{"range":{"start":{"line":18,"character":7},"end":{"line":18,"character":8}},"rangeLength":1,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 251\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":17},"contentChanges":[{"range":{"start":{"line":18,"character":6},"end":{"line":18,"character":7}},"rangeLength":1,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 251\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":18},"contentChanges":[{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":6}},"rangeLength":1,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 251\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":19},"contentChanges":[{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":5}},"rangeLength":1,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 251\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":20},"contentChanges":[{"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":4}},"rangeLength":4,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 255\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":21},"contentChanges":[{"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":0}},"rangeLength":0,"text":"    "}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 252\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":22},"contentChanges":[{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":4}},"rangeLength":0,"text":"s"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 252\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":23},"contentChanges":[{"range":{"start":{"line":18,"character":5},"end":{"line":18,"character":5}},"rangeLength":0,"text":"u"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 252\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":24},"contentChanges":[{"range":{"start":{"line":18,"character":6},"end":{"line":18,"character":6}},"rangeLength":0,"text":"r"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 252\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":25},"contentChanges":[{"range":{"start":{"line":18,"character":7},"end":{"line":18,"character":7}},"rangeLength":0,"text":"m"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 252\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":26},"contentChanges":[{"range":{"start":{"line":18,"character":8},"end":{"line":18,"character":8}},"rangeLength":0,"text":" "}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 251\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":27},"contentChanges":[{"range":{"start":{"line":18,"character":8},"end":{"line":18,"character":9}},"rangeLength":1,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 251\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":28},"contentChanges":[{"range":{"start":{"line":18,"character":7},"end":{"line":18,"character":8}},"rangeLength":1,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 251\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":29},"contentChanges":[{"range":{"start":{"line":18,"character":6},"end":{"line":18,"character":7}},"rangeLength":1,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 252\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":30},"contentChanges":[{"range":{"start":{"line":18,"character":6},"end":{"line":18,"character":6}},"rangeLength":0,"text":"m"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 252\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":31},"contentChanges":[{"range":{"start":{"line":18,"character":7},"end":{"line":18,"character":7}},"rangeLength":0,"text":" "}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 252\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":32},"contentChanges":[{"range":{"start":{"line":18,"character":8},"end":{"line":18,"character":8}},"rangeLength":0,"text":"="}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 252\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":33},"contentChanges":[{"range":{"start":{"line":18,"character":9},"end":{"line":18,"character":9}},"rangeLength":0,"text":" "}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 254\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":34},"contentChanges":[{"range":{"start":{"line":18,"character":10},"end":{"line":18,"character":10}},"rangeLength":0,"text":"0"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 259\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":35},"contentChanges":[{"range":{"start":{"line":18,"character":11},"end":{"line":18,"character":11}},"rangeLength":0,"text":"\\n    "}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 252\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":36},"contentChanges":[{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":4}},"rangeLength":0,"text":"f"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 252\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":37},"contentChanges":[{"range":{"start":{"line":19,"character":5},"end":{"line":19,"character":5}},"rangeLength":0,"text":"o"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 252\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":38},"contentChanges":[{"range":{"start":{"line":19,"character":6},"end":{"line":19,"character":6}},"rangeLength":0,"text":"r"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 252\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":39},"contentChanges":[{"range":{"start":{"line":19,"character":7},"end":{"line":19,"character":7}},"rangeLength":0,"text":" "}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 252\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":40},"contentChanges":[{"range":{"start":{"line":19,"character":8},"end":{"line":19,"character":8}},"rangeLength":0,"text":"i"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 252\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":41},"contentChanges":[{"range":{"start":{"line":19,"character":9},"end":{"line":19,"character":9}},"rangeLength":0,"text":" "}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 254\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":42},"contentChanges":[{"range":{"start":{"line":19,"character":10},"end":{"line":19,"character":10}},"rangeLength":0,"text":"i"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 254\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":43},"contentChanges":[{"range":{"start":{"line":19,"character":11},"end":{"line":19,"character":11}},"rangeLength":0,"text":"n"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 254\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":44},"contentChanges":[{"range":{"start":{"line":19,"character":12},"end":{"line":19,"character":12}},"rangeLength":0,"text":" "}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 254\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":45},"contentChanges":[{"range":{"start":{"line":19,"character":13},"end":{"line":19,"character":13}},"rangeLength":0,"text":"r"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 254\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":46},"contentChanges":[{"range":{"start":{"line":19,"character":14},"end":{"line":19,"character":14}},"rangeLength":0,"text":"a"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 254\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":47},"contentChanges":[{"range":{"start":{"line":19,"character":15},"end":{"line":19,"character":15}},"rangeLength":0,"text":"n"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 254\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":48},"contentChanges":[{"range":{"start":{"line":19,"character":16},"end":{"line":19,"character":16}},"rangeLength":0,"text":"g"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 254\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":49},"contentChanges":[{"range":{"start":{"line":19,"character":17},"end":{"line":19,"character":17}},"rangeLength":0,"text":"e"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 253\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":50},"contentChanges":[{"range":{"start":{"line":19,"character":17},"end":{"line":19,"character":18}},"rangeLength":1,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 253\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":51},"contentChanges":[{"range":{"start":{"line":19,"character":16},"end":{"line":19,"character":17}},"rangeLength":1,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 253\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":52},"contentChanges":[{"range":{"start":{"line":19,"character":15},"end":{"line":19,"character":16}},"rangeLength":1,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 253\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":53},"contentChanges":[{"range":{"start":{"line":19,"character":14},"end":{"line":19,"character":15}},"rangeLength":1,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 254\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":54},"contentChanges":[{"range":{"start":{"line":19,"character":14},"end":{"line":19,"character":14}},"rangeLength":0,"text":"a"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 254\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":55},"contentChanges":[{"range":{"start":{"line":19,"character":15},"end":{"line":19,"character":15}},"rangeLength":0,"text":"r"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 253\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":56},"contentChanges":[{"range":{"start":{"line":19,"character":15},"end":{"line":19,"character":16}},"rangeLength":1,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 253\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":57},"contentChanges":[{"range":{"start":{"line":19,"character":14},"end":{"line":19,"character":15}},"rangeLength":1,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 253\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":58},"contentChanges":[{"range":{"start":{"line":19,"character":13},"end":{"line":19,"character":14}},"rangeLength":1,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 254\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":59},"contentChanges":[{"range":{"start":{"line":19,"character":13},"end":{"line":19,"character":13}},"rangeLength":0,"text":"a"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 254\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":60},"contentChanges":[{"range":{"start":{"line":19,"character":14},"end":{"line":19,"character":14}},"rangeLength":0,"text":"r"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 254\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":61},"contentChanges":[{"range":{"start":{"line":19,"character":15},"end":{"line":19,"character":15}},"rangeLength":0,"text":"r"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 254\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":62},"contentChanges":[{"range":{"start":{"line":19,"character":16},"end":{"line":19,"character":16}},"rangeLength":0,"text":":"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 263\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":63},"contentChanges":[{"range":{"start":{"line":19,"character":17},"end":{"line":19,"character":17}},"rangeLength":0,"text":"\\n        "}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 252\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":64},"contentChanges":[{"range":{"start":{"line":20,"character":8},"end":{"line":20,"character":8}},"rangeLength":0,"text":"s"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 252\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":65},"contentChanges":[{"range":{"start":{"line":20,"character":9},"end":{"line":20,"character":9}},"rangeLength":0,"text":"u"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 254\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":66},"contentChanges":[{"range":{"start":{"line":20,"character":10},"end":{"line":20,"character":10}},"rangeLength":0,"text":" "}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 253\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":67},"contentChanges":[{"range":{"start":{"line":20,"character":10},"end":{"line":20,"character":11}},"rangeLength":1,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 254\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":68},"contentChanges":[{"range":{"start":{"line":20,"character":10},"end":{"line":20,"character":10}},"rangeLength":0,"text":"m"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 254\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":69},"contentChanges":[{"range":{"start":{"line":20,"character":11},"end":{"line":20,"character":11}},"rangeLength":0,"text":" "}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 254\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":70},"contentChanges":[{"range":{"start":{"line":20,"character":12},"end":{"line":20,"character":12}},"rangeLength":0,"text":"+"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 254\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":71},"contentChanges":[{"range":{"start":{"line":20,"character":13},"end":{"line":20,"character":13}},"rangeLength":0,"text":"="}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 254\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":72},"contentChanges":[{"range":{"start":{"line":20,"character":14},"end":{"line":20,"character":14}},"rangeLength":0,"text":" "}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 254\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":73},"contentChanges":[{"range":{"start":{"line":20,"character":15},"end":{"line":20,"character":15}},"rangeLength":0,"text":"i"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 254\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":74},"contentChanges":[{"range":{"start":{"line":20,"character":15},"end":{"line":20,"character":16}},"rangeLength":1,"text":"i"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 253\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":75},"contentChanges":[{"range":{"start":{"line":20,"character":15},"end":{"line":20,"character":16}},"rangeLength":1,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 254\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":76},"contentChanges":[{"range":{"start":{"line":20,"character":15},"end":{"line":20,"character":15}},"rangeLength":0,"text":"i"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 254\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":77},"contentChanges":[{"range":{"start":{"line":20,"character":15},"end":{"line":20,"character":16}},"rangeLength":1,"text":"i"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 263\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":78},"contentChanges":[{"range":{"start":{"line":20,"character":16},"end":{"line":20,"character":16}},"rangeLength":0,"text":"\\n        "}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 251\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":79},"contentChanges":[{"range":{"start":{"line":21,"character":4},"end":{"line":21,"character":8}},"rangeLength":4,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 252\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":80},"contentChanges":[{"range":{"start":{"line":21,"character":4},"end":{"line":21,"character":4}},"rangeLength":0,"text":"r"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 252\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":81},"contentChanges":[{"range":{"start":{"line":21,"character":5},"end":{"line":21,"character":5}},"rangeLength":0,"text":"e"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 252\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":82},"contentChanges":[{"range":{"start":{"line":21,"character":6},"end":{"line":21,"character":6}},"rangeLength":0,"text":"t"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 252\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":83},"contentChanges":[{"range":{"start":{"line":21,"character":7},"end":{"line":21,"character":7}},"rangeLength":0,"text":"u"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 252\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":84},"contentChanges":[{"range":{"start":{"line":21,"character":8},"end":{"line":21,"character":8}},"rangeLength":0,"text":"r"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 251\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":85},"contentChanges":[{"range":{"start":{"line":21,"character":8},"end":{"line":21,"character":9}},"rangeLength":1,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 251\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":86},"contentChanges":[{"range":{"start":{"line":21,"character":7},"end":{"line":21,"character":8}},"rangeLength":1,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 251\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":87},"contentChanges":[{"range":{"start":{"line":21,"character":6},"end":{"line":21,"character":7}},"rangeLength":1,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 251\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":88},"contentChanges":[{"range":{"start":{"line":21,"character":5},"end":{"line":21,"character":6}},"rangeLength":1,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 251\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":89},"contentChanges":[{"range":{"start":{"line":21,"character":4},"end":{"line":21,"character":5}},"rangeLength":1,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 257\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":90},"contentChanges":[{"range":{"start":{"line":21,"character":4},"end":{"line":21,"character":4}},"rangeLength":0,"text":"\\n    "}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 211\r\n\r\n{"jsonrpc":"2.0","id":1,"method":"workspace/executeCommand","params":{"command":"ACS-python.fetchSummary","arguments":["def sumOfArray(arr):\\n    sum = 0\\n    for i in arr:\\n        sum += i\\n    \\n    r\\n\\n"]}}'
DEBUG:pygls.protocol:Request message received.
DEBUG:urllib3.connectionpool:Starting new HTTP connection (1): ec2-35-154-160-245.ap-south-1.compute.amazonaws.com:3000
DEBUG:urllib3.connectionpool:http://ec2-35-154-160-245.ap-south-1.compute.amazonaws.com:3000 "POST /summary HTTP/1.1" 200 51
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 1, "result": "Computes the sum of the given array ."}
DEBUG:pygls.protocol:Received b'Content-Length: 252\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":91},"contentChanges":[{"range":{"start":{"line":22,"character":4},"end":{"line":22,"character":4}},"rangeLength":0,"text":"r"}]}}Content-Length: 252\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":92},"contentChanges":[{"range":{"start":{"line":22,"character":5},"end":{"line":22,"character":5}},"rangeLength":0,"text":"e"}]}}Content-Length: 252\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":93},"contentChanges":[{"range":{"start":{"line":22,"character":6},"end":{"line":22,"character":6}},"rangeLength":0,"text":"t"}]}}Content-Length: 252\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":94},"contentChanges":[{"range":{"start":{"line":22,"character":7},"end":{"line":22,"character":7}},"rangeLength":0,"text":"u"}]}}Content-Length: 252\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":95},"contentChanges":[{"range":{"start":{"line":22,"character":8},"end":{"line":22,"character":8}},"rangeLength":0,"text":"r"}]}}Content-Length: 252\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":96},"contentChanges":[{"range":{"start":{"line":22,"character":9},"end":{"line":22,"character":9}},"rangeLength":0,"text":"n"}]}}Content-Length: 254\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":97},"contentChanges":[{"range":{"start":{"line":22,"character":10},"end":{"line":22,"character":10}},"rangeLength":0,"text":" "}]}}Content-Length: 254\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":98},"contentChanges":[{"range":{"start":{"line":22,"character":11},"end":{"line":22,"character":11}},"rangeLength":0,"text":"s"}]}}Content-Length: 254\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":99},"contentChanges":[{"range":{"start":{"line":22,"character":12},"end":{"line":22,"character":12}},"rangeLength":0,"text":"u"}]}}Content-Length: 255\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":100},"contentChanges":[{"range":{"start":{"line":22,"character":13},"end":{"line":22,"character":13}},"rangeLength":0,"text":"m"}]}}Content-Length: 257\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":101},"contentChanges":[{"range":{"start":{"line":22,"character":11},"end":{"line":22,"character":14}},"rangeLength":3,"text":"sum"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 289\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":102},"contentChanges":[{"range":{"start":{"line":15,"character":4},"end":{"line":16,"character":0}},"rangeLength":1,"text":"Computes the sum of the given array ."}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 214\r\n\r\n{"jsonrpc":"2.0","id":2,"method":"workspace/executeCommand","params":{"command":"ACS-python.fetchSummary","arguments":["def sumOfArray(arr):\\n    sum = 0\\n    for i in arr:\\n        sum += i\\n    return sum\\n\\n"]}}'
DEBUG:pygls.protocol:Request message received.
DEBUG:urllib3.connectionpool:Starting new HTTP connection (1): ec2-35-154-160-245.ap-south-1.compute.amazonaws.com:3000
DEBUG:urllib3.connectionpool:http://ec2-35-154-160-245.ap-south-1.compute.amazonaws.com:3000 "POST /summary HTTP/1.1" 200 50
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 2, "result": "Returns the sum of the given array ."}
DEBUG:pygls.protocol:Received b'Content-Length: 252\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":103},"contentChanges":[{"range":{"start":{"line":20,"character":0},"end":{"line":21,"character":0}},"rangeLength":5,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 308\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":104},"contentChanges":[{"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":0}},"rangeLength":0,"text":"\\"\\"\\"$\\nReturns the sum of the given array .\\n$\\"\\"\\"\\n"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 224\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","id":3,"method":"workspace/executeCommand","params":{"command":"ACS-python.fetchSummary","arguments":["def sumOfArray(arr):\\n    sum = 0\\n    for i in arr:\\n        sum += i\\n        \\n    return sum\\n\\n"]}}Content-Length: 264\r\n\r\n'
DEBUG:pygls.protocol:Request message received.
DEBUG:urllib3.connectionpool:Starting new HTTP connection (1): ec2-35-154-160-245.ap-south-1.compute.amazonaws.com:3000
DEBUG:urllib3.connectionpool:http://ec2-35-154-160-245.ap-south-1.compute.amazonaws.com:3000 "POST /summary HTTP/1.1" 200 46
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 3, "result": "Calculates the sum of an array ."}
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":105},"contentChanges":[{"range":{"start":{"line":22,"character":16},"end":{"line":22,"character":16}},"rangeLength":0,"text":"\\n        "}]}}Content-Length: 252\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":106},"contentChanges":[{"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":8}},"rangeLength":8,"text":""}]}}Content-Length: 207\r\n\r\n{"jsonrpc":"2.0","id":4,"method":"workspace/executeCommand","params":{"command":"ACS-python.fetchSummary","arguments":["def exists(arr, t):\\n    if( t in arr ):\\n        return True\\n    return False\\n\\n"]}}Content-Length: 253\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":107},"contentChanges":[{"range":{"start":{"line":15,"character":0},"end":{"line":16,"character":0}},"rangeLength":46,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Request message received.
DEBUG:urllib3.connectionpool:Starting new HTTP connection (1): ec2-35-154-160-245.ap-south-1.compute.amazonaws.com:3000
DEBUG:urllib3.connectionpool:http://ec2-35-154-160-245.ap-south-1.compute.amazonaws.com:3000 "POST /summary HTTP/1.1" 200 31
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 4, "result": "Check if t exists"}
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 304\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":108},"contentChanges":[{"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":0}},"rangeLength":0,"text":"\\"\\"\\"$\\nCalculates the sum of an array .\\n$\\"\\"\\"\\n"}]}}Content-Length: 216\r\n\r\n{"jsonrpc":"2.0","id":5,"method":"workspace/executeCommand","params":{"command":"ACS-python.fetchSummary","arguments":["def sumOfArray(arr):\\n    sum = 0\\n    for i in arr:\\n        sum += i\\n\\n    return sum\\n\\n"]}}Content-Length: 253\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":109},"contentChanges":[{"range":{"start":{"line":19,"character":0},"end":{"line":22,"character":0}},"rangeLength":43,"text":""}]}}Content-Length: 214\r\n\r\n{"jsonrpc":"2.0","id":6,"method":"workspace/executeCommand","params":{"command":"ACS-python.fetchSummary","arguments":["def sumOfArray(arr):\\n    sum = 0\\n    for i in arr:\\n        sum += i\\n    return sum\\n\\n"]}}Content-Length: 252\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":110},"contentChanges":[{"range":{"start":{"line":22,"character":0},"end":{"line":23,"character":0}},"rangeLength":1,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Request message received.
DEBUG:urllib3.connectionpool:Starting new HTTP connection (1): ec2-35-154-160-245.ap-south-1.compute.amazonaws.com:3000
DEBUG:urllib3.connectionpool:http://ec2-35-154-160-245.ap-south-1.compute.amazonaws.com:3000 "POST /summary HTTP/1.1" 200 46
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 5, "result": "Calculates the sum of an array ."}
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Request message received.
DEBUG:urllib3.connectionpool:Starting new HTTP connection (1): ec2-35-154-160-245.ap-south-1.compute.amazonaws.com:3000
DEBUG:urllib3.connectionpool:http://ec2-35-154-160-245.ap-south-1.compute.amazonaws.com:3000 "POST /summary HTTP/1.1" 200 50
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 6, "result": "Returns the sum of the given array ."}
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 269\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":111},"contentChanges":[{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":42}},"rangeLength":42,"text":"Check if t exists"}]}}Content-Length: 213\r\n\r\n{"jsonrpc":"2.0","id":7,"method":"workspace/executeCommand","params":{"command":"ACS-python.fetchSummary","arguments":["def sumOfArray(arr):\\n    sum = \\n    for i in arr:\\n        sum += i\\n    return sum\\n\\n"]}}Content-Length: 254\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":112},"contentChanges":[{"range":{"start":{"line":19,"character":10},"end":{"line":19,"character":11}},"rangeLength":1,"text":""}]}}Content-Length: 255\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":113},"contentChanges":[{"range":{"start":{"line":19,"character":10},"end":{"line":19,"character":10}},"rangeLength":0,"text":"1"}]}}Content-Length: 255\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":114},"contentChanges":[{"range":{"start":{"line":19,"character":11},"end":{"line":19,"character":11}},"rangeLength":0,"text":"0"}]}}Content-Length: 286\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":115},"contentChanges":[{"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":36}},"rangeLength":36,"text":"Calculates the sum of an array ."}]}}Content-Length: 254\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":116},"contentChanges":[{"range":{"start":{"line":19,"character":10},"end":{"line":19,"character":11}},"rangeLength":1,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Request message received.
DEBUG:urllib3.connectionpool:Starting new HTTP connection (1): ec2-35-154-160-245.ap-south-1.compute.amazonaws.com:3000
DEBUG:urllib3.connectionpool:http://ec2-35-154-160-245.ap-south-1.compute.amazonaws.com:3000 "POST /summary HTTP/1.1" 200 50
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 7, "result": "Returns the sum of the given array ."}
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 290\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":117},"contentChanges":[{"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":32}},"rangeLength":32,"text":"Returns the sum of the given array ."}]}}Content-Length: 158\r\n\r\n{"jsonrpc":"2.0","id":8,"method":"workspace/executeCommand","params":{"command":"ACS-python.fetchSummary","arguments":["def getsum(arr):\\n    return arr\\n"]}}Content-Length: 253\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":118},"contentChanges":[{"range":{"start":{"line":28,"character":0},"end":{"line":29,"character":0}},"rangeLength":12,"text":""}]}}Content-Length: 255\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":119},"contentChanges":[{"range":{"start":{"line":27,"character":16},"end":{"line":28,"character":14}},"rangeLength":15,"text":""}]}}Content-Length: 255\r\n\r\n{"jsonrpc":"2.0","id":9,"method":"workspace/executeCommand","params":{"command":"ACS-python.fetchSummary","arguments":["def sumOfArray(arr):\\n    sum = 0\\n    for i in arr:\\n        sum += i\\n    return sum\\n\\n\\"\\"\\"$\\nFunction Description Goes here\\n"]}}Content-Length: 254\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":120},"contentChanges":[{"range":{"start":{"line":26,"character":4},"end":{"line":26,"character":4}},"rangeLength":0,"text":"\\n"}]}}Content-Length: 252\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":121},"contentChanges":[{"range":{"start":{"line":26,"character":4},"end":{"line":27,"character":0}},"rangeLength":1,"text":""}]}}Content-Length: 260\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":122},"contentChanges":[{"range":{"start":{"line":27,"character":16},"end":{"line":27,"character":16}},"rangeLength":0,"text":"\\n    "}]}}Content-Length: 253\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":123},"contentChanges":[{"range":{"start":{"line":28,"character":4},"end":{"line":28,"character":4}},"rangeLength":0,"text":"p"}]}}Content-Length: 253\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":124},"contentChanges":[{"range":{"start":{"line":28,"character":5},"end":{"line":28,"character":5}},"rangeLength":0,"text":"r"}]}}Content-Length: 253\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":125},"contentChanges":[{"range":{"start":{"line":28,"character":6},"end":{"line":28,"character":6}},"rangeLength":0,"text":"i"}]}}Content-Length: 253\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":126},"contentChanges":[{"range":{"start":{"line":28,"character":7},"end":{"line":28,"character":7}},"rangeLength":0,"text":"n"}]}}Content-Length: 253\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":127},"contentChanges":[{"range":{"start":{"line":28,"character":8},"end":{"line":28,"character":8}},"rangeLength":0,"text":"t"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Request message received.
DEBUG:urllib3.connectionpool:Starting new HTTP connection (1): ec2-35-154-160-245.ap-south-1.compute.amazonaws.com:3000
DEBUG:urllib3.connectionpool:http://ec2-35-154-160-245.ap-south-1.compute.amazonaws.com:3000 "POST /summary HTTP/1.1" 200 34
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 8, "result": "Summarize an array ."}
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Request message received.
DEBUG:urllib3.connectionpool:Starting new HTTP connection (1): ec2-35-154-160-245.ap-south-1.compute.amazonaws.com:3000
DEBUG:urllib3.connectionpool:http://ec2-35-154-160-245.ap-south-1.compute.amazonaws.com:3000 "POST /summary HTTP/1.1" 200 51
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 9, "result": "Computes the sum of the given array ."}
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 254\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":128},"contentChanges":[{"range":{"start":{"line":28,"character":9},"end":{"line":28,"character":9}},"rangeLength":0,"text":"()"}]}}Content-Length: 258\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":129},"contentChanges":[{"range":{"start":{"line":28,"character":10},"end":{"line":28,"character":10}},"rangeLength":0,"text":"\\"\\""}]}}Content-Length: 255\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":130},"contentChanges":[{"range":{"start":{"line":28,"character":11},"end":{"line":28,"character":11}},"rangeLength":0,"text":"s"}]}}Content-Length: 255\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":131},"contentChanges":[{"range":{"start":{"line":28,"character":12},"end":{"line":28,"character":12}},"rangeLength":0,"text":"u"}]}}Content-Length: 255\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":132},"contentChanges":[{"range":{"start":{"line":28,"character":13},"end":{"line":28,"character":13}},"rangeLength":0,"text":"m"}]}}Content-Length: 255\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":133},"contentChanges":[{"range":{"start":{"line":28,"character":14},"end":{"line":28,"character":14}},"rangeLength":0,"text":" "}]}}Content-Length: 255\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":134},"contentChanges":[{"range":{"start":{"line":28,"character":15},"end":{"line":28,"character":15}},"rangeLength":0,"text":"i"}]}}Content-Length: 255\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":135},"contentChanges":[{"range":{"start":{"line":28,"character":16},"end":{"line":28,"character":16}},"rangeLength":0,"text":"s"}]}}Content-Length: 255\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":136},"contentChanges":[{"range":{"start":{"line":28,"character":17},"end":{"line":28,"character":17}},"rangeLength":0,"text":" "}]}}Content-Length: 256\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":137},"contentChanges":[{"range":{"start":{"line":28,"character":18},"end":{"line":28,"character":19}},"rangeLength":1,"text":"\\""}]}}Content-Length: 255\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":138},"contentChanges":[{"range":{"start":{"line":28,"character":19},"end":{"line":28,"character":19}},"rangeLength":0,"text":","}]}}Content-Length: 255\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":139},"contentChanges":[{"range":{"start":{"line":28,"character":20},"end":{"line":28,"character":20}},"rangeLength":0,"text":" "}]}}Content-Length: 255\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":140},"contentChanges":[{"range":{"start":{"line":28,"character":21},"end":{"line":28,"character":21}},"rangeLength":0,"text":"s"}]}}Content-Length: 255\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":141},"contentChanges":[{"range":{"start":{"line":28,"character":22},"end":{"line":28,"character":22}},"rangeLength":0,"text":"u"}]}}Content-Length: 255\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":142},"contentChanges":[{"range":{"start":{"line":28,"character":23},"end":{"line":28,"character":23}},"rangeLength":0,"text":"m"}]}}Content-Length: 274\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":143},"contentChanges":[{"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":30}},"rangeLength":30,"text":"Summarize an array ."}]}}Content-Length: 254\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":144},"contentChanges":[{"range":{"start":{"line":28,"character":23},"end":{"line":28,"character":24}},"rangeLength":1,"text":""}]}}Content-Length: 255\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":145},"contentChanges":[{"range":{"start":{"line":28,"character":23},"end":{"line":28,"character":23}},"rangeLength":0,"text":"m"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 291\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":146},"contentChanges":[{"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":36}},"rangeLength":36,"text":"Computes the sum of the given array ."}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 146\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","id":10,"method":"workspace/executeCommand","params":{"command":"ACS-python.fetchSummary","arguments":["def addNum(a, b):\\n\\n"]}}Content-Length: 251\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":147},"contentChanges":[{"range":{"start":{"line":5,"character":0},"end":{"line":6,"character":0}},"rangeLength":17,"text":""}]}}'
DEBUG:pygls.protocol:Request message received.
DEBUG:urllib3.connectionpool:Starting new HTTP connection (1): ec2-35-154-160-245.ap-south-1.compute.amazonaws.com:3000
DEBUG:urllib3.connectionpool:http://ec2-35-154-160-245.ap-south-1.compute.amazonaws.com:3000 "POST /summary HTTP/1.1" 200 31
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 10, "result": "Add two numbers ."}
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 258\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":148},"contentChanges":[{"range":{"start":{"line":4,"character":17},"end":{"line":4,"character":17}},"rangeLength":0,"text":"\\n    "}]}}Content-Length: 251\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":149},"contentChanges":[{"range":{"start":{"line":5,"character":4},"end":{"line":5,"character":4}},"rangeLength":0,"text":"r"}]}}Content-Length: 251\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":150},"contentChanges":[{"range":{"start":{"line":5,"character":5},"end":{"line":5,"character":5}},"rangeLength":0,"text":"e"}]}}Content-Length: 251\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":151},"contentChanges":[{"range":{"start":{"line":5,"character":6},"end":{"line":5,"character":6}},"rangeLength":0,"text":"t"}]}}Content-Length: 251\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":152},"contentChanges":[{"range":{"start":{"line":5,"character":7},"end":{"line":5,"character":7}},"rangeLength":0,"text":"u"}]}}Content-Length: 251\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":153},"contentChanges":[{"range":{"start":{"line":5,"character":8},"end":{"line":5,"character":8}},"rangeLength":0,"text":"r"}]}}Content-Length: 251\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":154},"contentChanges":[{"range":{"start":{"line":5,"character":9},"end":{"line":5,"character":9}},"rangeLength":0,"text":"n"}]}}Content-Length: 253\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":155},"contentChanges":[{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":10}},"rangeLength":0,"text":" "}]}}Content-Length: 253\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":156},"contentChanges":[{"range":{"start":{"line":5,"character":11},"end":{"line":5,"character":11}},"rangeLength":0,"text":"a"}]}}Content-Length: 253\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":157},"contentChanges":[{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":12}},"rangeLength":0,"text":" "}]}}Content-Length: 253\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":158},"contentChanges":[{"range":{"start":{"line":5,"character":13},"end":{"line":5,"character":13}},"rangeLength":0,"text":"-"}]}}Content-Length: 253\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":159},"contentChanges":[{"range":{"start":{"line":5,"character":14},"end":{"line":5,"character":14}},"rangeLength":0,"text":" "}]}}Content-Length: 253\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":160},"contentChanges":[{"range":{"start":{"line":5,"character":15},"end":{"line":5,"character":15}},"rangeLength":0,"text":"b"}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 269\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":161},"contentChanges":[{"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":17}},"rangeLength":17,"text":"Add two numbers ."}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 258\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":162},"contentChanges":[{"range":{"start":{"line":4,"character":17},"end":{"line":4,"character":17}},"rangeLength":0,"text":"\\n    "}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 254\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":163},"contentChanges":[{"range":{"start":{"line":5,"character":4},"end":{"line":5,"character":4}},"rangeLength":0,"text":"    "}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 250\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":164},"contentChanges":[{"range":{"start":{"line":5,"character":4},"end":{"line":5,"character":8}},"rangeLength":4,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 250\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":165},"contentChanges":[{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":4}},"rangeLength":4,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 251\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":166},"contentChanges":[{"range":{"start":{"line":4,"character":17},"end":{"line":5,"character":0}},"rangeLength":1,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 218\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","id":11,"method":"workspace/executeCommand","params":{"command":"ACS-python.fetchSummary","arguments":["def exists(arr, t):\\n    if( t in arr ):\\n        return True\\n        \\n    return False\\n\\n"]}}Content-Length: 264\r\n\r\n'
DEBUG:pygls.protocol:Request message received.
DEBUG:urllib3.connectionpool:Starting new HTTP connection (1): ec2-35-154-160-245.ap-south-1.compute.amazonaws.com:3000
DEBUG:urllib3.connectionpool:http://ec2-35-154-160-245.ap-south-1.compute.amazonaws.com:3000 "POST /summary HTTP/1.1" 200 31
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 11, "result": "Check if t exists"}
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":167},"contentChanges":[{"range":{"start":{"line":12,"character":19},"end":{"line":12,"character":19}},"rangeLength":0,"text":"\\n        "}]}}Content-Length: 252\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":168},"contentChanges":[{"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":8}},"rangeLength":8,"text":""}]}}Content-Length: 252\r\n\r\n{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":169},"contentChanges":[{"range":{"start":{"line":13,"character":0},"end":{"line":14,"character":0}},"rangeLength":1,"text":""}]}}'
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Notification message received.
DEBUG:pygls.protocol:Received b'Content-Length: 269\r\n\r\n'
DEBUG:pygls.protocol:Received b'{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/poorna/test.py","version":170},"contentChanges":[{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":17}},"rangeLength":17,"text":"Check if t exists"}]}}'
DEBUG:pygls.protocol:Notification message received.
ERROR:pygls.protocol:Connection to the client is lost! Shutting down the server.
INFO:pygls.server:Shutting down the server
INFO:pygls.server:Closing the event loop.
